/** GENERATED FILE **/
/** Generated by: ginoc at 10/15/2019 3:49:00 PM **/
/** Restricted to types: Bundle|Patient **/
/**
 * Base StructureDefinition for base64Binary Type: A stream of bytes
 * From: c:/git/fhir\publish\base64binary.profile.canonical.json
 */
export type base64Binary = string;
/**
 * Base StructureDefinition for canonical type: A URI that is a reference to a canonical URL on a FHIR resource
 * From: c:/git/fhir\publish\canonical.profile.canonical.json
 */
export type canonical = string;
/**
 * Base StructureDefinition for code type: A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents
 * From: c:/git/fhir\publish\code.profile.canonical.json
 */
export type code = string;
/**
 * Base StructureDefinition for date Type: A date or partial date (e.g. just year or year + month). There is no time zone. The format is a union of the schema types gYear, gYearMonth and date.  Dates SHALL be valid dates.
 * From: c:/git/fhir\publish\date.profile.canonical.json
 */
export type date = string;
/**
 * Base StructureDefinition for dateTime Type: A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates.
 * From: c:/git/fhir\publish\datetime.profile.canonical.json
 */
export type dateTime = string;
/**
 * Base StructureDefinition for decimal Type: A rational number with implicit precision
 * From: c:/git/fhir\publish\decimal.profile.canonical.json
 */
export type decimal = number;
/**
 * Base StructureDefinition for id type: Any combination of letters, numerals, "-" and ".", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive.
 * From: c:/git/fhir\publish\id.profile.canonical.json
 */
export type id = string;
/**
 * Base StructureDefinition for instant Type: An instant in time - known at least to the second
 * From: c:/git/fhir\publish\instant.profile.canonical.json
 */
export type instant = string;
/**
 * Base StructureDefinition for integer Type: A whole number
 * From: c:/git/fhir\publish\integer.profile.canonical.json
 */
export type integer = number;
/**
 * Base StructureDefinition for markdown type: A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine
 * From: c:/git/fhir\publish\markdown.profile.canonical.json
 */
export type markdown = string;
/**
 * Base StructureDefinition for oid type: An OID represented as a URI
 * From: c:/git/fhir\publish\oid.profile.canonical.json
 */
export type oid = string;
/**
 * Base StructureDefinition for positiveInt type: An integer with a value that is positive (e.g. >0)
 * From: c:/git/fhir\publish\positiveint.profile.canonical.json
 */
export type positiveInt = number;
/**
 * Base StructureDefinition for time Type: A time during the day, with no date specified
 * From: c:/git/fhir\publish\time.profile.canonical.json
 */
export type time = string;
/**
 * Base StructureDefinition for unsignedInt type: An integer with a value that is not negative (e.g. >= 0)
 * From: c:/git/fhir\publish\unsignedint.profile.canonical.json
 */
export type unsignedInt = number;
/**
 * Base StructureDefinition for uri Type: String of characters used to identify a name or a resource
 * From: c:/git/fhir\publish\uri.profile.canonical.json
 */
export type uri = string;
/**
 * Base StructureDefinition for url type: A URI that is a literal reference
 * From: c:/git/fhir\publish\url.profile.canonical.json
 */
export type url = string;
/**
 * Base StructureDefinition for uuid type: A UUID, represented as a URI
 * From: c:/git/fhir\publish\uuid.profile.canonical.json
 */
export type uuid = string;
/**
 * Base StructureDefinition for xhtml Type
 * From: c:/git/fhir\publish\xhtml.profile.canonical.json
 */
export type xhtml = string;
/**
 * Code Values for the Address.type field
 */
export enum AddressTypeCodes {
	postal = "postal",
	physical = "physical",
	both = "both",
}
/**
 * Code Values for the Address.use field
 */
export enum AddressUseCodes {
	home = "home",
	work = "work",
	temp = "temp",
	old = "old",
	billing = "billing",
}
/**
 * Base StructureDefinition for Address Type: An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.
 * From: c:/git/fhir\publish\address.profile.canonical.json
 */
export interface Address extends Element {
	/**
	 * The name of the city, town, suburb, village or other community or delivery center.
	 */
	city?: string;
	/**
	 * May contain extended information for property: 'city'
	 */
	_city?: Element;
	/**
	 * Country - a nation as commonly understood or generally accepted.
	 */
	country?: string;
	/**
	 * May contain extended information for property: 'country'
	 */
	_country?: Element;
	/**
	 * The name of the administrative area (county).
	 */
	district?: string;
	/**
	 * May contain extended information for property: 'district'
	 */
	_district?: Element;
	/**
	 * This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.
	 */
	line?: string[];
	/**
	 * May contain extended information for property: 'line'
	 */
	_line?: Element[];
	/**
	 * Time period when address was/is in use.
	 */
	period?: Period;
	/**
	 * May contain extended information for property: 'period'
	 */
	_period?: Element;
	/**
	 * A postal code designating a region defined by the postal service.
	 */
	postalCode?: string;
	/**
	 * May contain extended information for property: 'postalCode'
	 */
	_postalCode?: Element;
	/**
	 * Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes).
	 */
	state?: string;
	/**
	 * May contain extended information for property: 'state'
	 */
	_state?: Element;
	/**
	 * Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts.
	 */
	text?: string;
	/**
	 * May contain extended information for property: 'text'
	 */
	_text?: Element;
	/**
	 * The definition of Address states that "address is intended to describe postal addresses, not physical locations". However, many applications track whether an address has a dual purpose of being a location that can be visited as well as being a valid delivery destination, and Postal addresses are often used as proxies for physical locations (also see the [Location](location.html#) resource).
	 */
	type?: code;
	/**
	 * May contain extended information for property: 'type'
	 */
	_type?: Element;
	/**
	 * Applications can assume that an address is current unless it explicitly says that it is temporary or old.
	 */
	use?: code;
	/**
	 * May contain extended information for property: 'use'
	 */
	_use?: Element;
}
/**
 * Base StructureDefinition for Age Type: A duration of time during which an organism (or a process) has existed.
 * From: c:/git/fhir\publish\age.profile.canonical.json
 */
export type Age = Quantity;
/**
 * Base StructureDefinition for Annotation Type: A  text note which also  contains information about who made the statement and when.
 * From: c:/git/fhir\publish\annotation.profile.canonical.json
 */
export interface Annotation extends Element {
	/**
	 * The individual responsible for making the annotation.
	 */
	authorReference?: Reference;
	/**
	 * May contain extended information for property: 'authorReference'
	 */
	_authorReference?: Element;
	/**
	 * The individual responsible for making the annotation.
	 */
	authorString?: string;
	/**
	 * May contain extended information for property: 'authorString'
	 */
	_authorString?: Element;
	/**
	 * The text of the annotation in markdown format.
	 */
	text: markdown;
	/**
	 * May contain extended information for property: 'text'
	 */
	_text?: Element;
	/**
	 * Indicates when this particular annotation was made.
	 */
	time?: dateTime;
	/**
	 * May contain extended information for property: 'time'
	 */
	_time?: Element;
}
/**
 * Code Values for the Attachment.contentType field
 */
export enum AttachmentContentTypeCodes {
	Mime = "Mime",
}
/**
 * Code Values for the Attachment.language field
 */
export enum AttachmentLanguageCodes {
	Human = "Human",
}
/**
 * Base StructureDefinition for Attachment Type: For referring to data content defined in other formats.
 * From: c:/git/fhir\publish\attachment.profile.canonical.json
 */
export interface Attachment extends Element {
	/**
	 * Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate.
	 */
	contentType?: code;
	/**
	 * May contain extended information for property: 'contentType'
	 */
	_contentType?: Element;
	/**
	 * The date that the attachment was first created.
	 */
	creation?: dateTime;
	/**
	 * May contain extended information for property: 'creation'
	 */
	_creation?: Element;
	/**
	 * The actual data of the attachment - a sequence of bytes, base64 encoded.
	 */
	data?: base64Binary;
	/**
	 * May contain extended information for property: 'data'
	 */
	_data?: Element;
	/**
	 * The calculated hash of the data using SHA-1. Represented using base64.
	 */
	hash?: base64Binary;
	/**
	 * May contain extended information for property: 'hash'
	 */
	_hash?: Element;
	/**
	 * The human language of the content. The value can be any valid value according to BCP 47.
	 */
	language?: code;
	/**
	 * May contain extended information for property: 'language'
	 */
	_language?: Element;
	/**
	 * The number of bytes of data that make up this attachment (before base64 encoding, if that is done).
	 */
	size?: unsignedInt;
	/**
	 * May contain extended information for property: 'size'
	 */
	_size?: Element;
	/**
	 * A label or set of text to display in place of the data.
	 */
	title?: string;
	/**
	 * May contain extended information for property: 'title'
	 */
	_title?: Element;
	/**
	 * A location where the data can be accessed.
	 */
	url?: url;
	/**
	 * May contain extended information for property: 'url'
	 */
	_url?: Element;
}
/**
 * Base StructureDefinition for BackboneElement Type: Base definition for all elements that are defined inside a resource - but not those in a data type.
 * From: c:/git/fhir\publish\backboneelement.profile.canonical.json
 */
export interface BackboneElement extends Element {
	/**
	 * May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
	 * 
	 * Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
	 */
	modifierExtension?: Extension[];
	/**
	 * May contain extended information for property: 'modifierExtension'
	 */
	_modifierExtension?: Element[];
}
/**
 * Code Values for the Bundle.type field
 */
export enum BundleTypeCodes {
	document = "document",
	message = "message",
	transaction = "transaction",
	transaction_response = "transaction-response",
	batch = "batch",
	batch_response = "batch-response",
	history = "history",
	searchset = "searchset",
	collection = "collection",
}
/**
 * A container for a collection of resources.
 * From: c:/git/fhir\publish\bundle.profile.canonical.json
 */
export interface Bundle extends Resource {
	/** Resource Type Name (for serialization) */
	resourceType: 'Bundle';
	/**
	 * An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only).
	 */
	entry?: BundleEntry[];
	/**
	 * May contain extended information for property: 'entry'
	 */
	_entry?: Element[];
	/**
	 * A persistent identifier for the bundle that won't change as a bundle is copied from server to server.
	 */
	identifier?: Identifier;
	/**
	 * May contain extended information for property: 'identifier'
	 */
	_identifier?: Element;
	/**
	 * A series of links that provide context to this bundle.
	 */
	link?: BundleLink[];
	/**
	 * May contain extended information for property: 'link'
	 */
	_link?: Element[];
	/**
	 * Digital Signature - base64 encoded. XML-DSig or a JWT.
	 */
	signature?: Signature;
	/**
	 * May contain extended information for property: 'signature'
	 */
	_signature?: Element;
	/**
	 * The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle.
	 */
	timestamp?: instant;
	/**
	 * May contain extended information for property: 'timestamp'
	 */
	_timestamp?: Element;
	/**
	 * If a set of search matches, this is the total number of entries of type 'match' across all pages in the search.  It does not include search.mode = 'include' or 'outcome' entries and it does not provide a count of the number of entries in the Bundle.
	 */
	total?: unsignedInt;
	/**
	 * May contain extended information for property: 'total'
	 */
	_total?: Element;
	/**
	 * It's possible to use a bundle for other purposes (e.g. a document can be accepted as a transaction). This is primarily defined so that there can be specific rules for some of the bundle types.
	 */
	type: code;
	/**
	 * May contain extended information for property: 'type'
	 */
	_type?: Element;
}
/**
 * An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only).
 * From: c:/git/fhir\publish\bundle.profile.canonical.json
 */
export interface BundleEntry extends Element {
	/**
	 * The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id in the resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be version-independent URL consistent with the Resource.id. The fullUrl is a version independent reference to the resource. The fullUrl element SHALL have a value except that: 
	 * * fullUrl can be empty on a POST (although it does not need to when specifying a temporary id for reference in the bundle)
	 * * Results from operations might involve resources that are not identified.
	 */
	fullUrl?: uri;
	/**
	 * May contain extended information for property: 'fullUrl'
	 */
	_fullUrl?: Element;
	/**
	 * A series of links that provide context to this entry.
	 */
	link?: BundleLink[];
	/**
	 * May contain extended information for property: 'link'
	 */
	_link?: Element[];
	/**
	 * Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry.
	 */
	request?: BundleEntryRequest;
	/**
	 * May contain extended information for property: 'request'
	 */
	_request?: Element;
	/**
	 * The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type.
	 */
	resource?: Resource;
	/**
	 * May contain extended information for property: 'resource'
	 */
	_resource?: Element;
	/**
	 * Indicates the results of processing the corresponding 'request' entry in the batch or transaction being responded to or what the results of an operation where when returning history.
	 */
	response?: BundleEntryResponse;
	/**
	 * May contain extended information for property: 'response'
	 */
	_response?: Element;
	/**
	 * Information about the search process that lead to the creation of this entry.
	 */
	search?: BundleEntrySearch;
	/**
	 * May contain extended information for property: 'search'
	 */
	_search?: Element;
}
/**
 * Code Values for the BundleEntryRequest.method field
 */
export enum BundleEntryRequestMethodCodes {
	GET = "GET",
	HEAD = "HEAD",
	POST = "POST",
	PUT = "PUT",
	DELETE = "DELETE",
	PATCH = "PATCH",
}
/**
 * Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry.
 * From: c:/git/fhir\publish\bundle.profile.canonical.json
 */
export interface BundleEntryRequest extends Element {
	/**
	 * Only perform the operation if the Etag value matches. For more information, see the API section ["Managing Resource Contention"](http.html#concurrency).
	 */
	ifMatch?: string;
	/**
	 * May contain extended information for property: 'ifMatch'
	 */
	_ifMatch?: Element;
	/**
	 * Only perform the operation if the last updated date matches. See the API documentation for ["Conditional Read"](http.html#cread).
	 */
	ifModifiedSince?: instant;
	/**
	 * May contain extended information for property: 'ifModifiedSince'
	 */
	_ifModifiedSince?: Element;
	/**
	 * Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for ["Conditional Create"](http.html#ccreate). This is just the query portion of the URL - what follows the "?" (not including the "?").
	 */
	ifNoneExist?: string;
	/**
	 * May contain extended information for property: 'ifNoneExist'
	 */
	_ifNoneExist?: Element;
	/**
	 * If the ETag values match, return a 304 Not Modified status. See the API documentation for ["Conditional Read"](http.html#cread).
	 */
	ifNoneMatch?: string;
	/**
	 * May contain extended information for property: 'ifNoneMatch'
	 */
	_ifNoneMatch?: Element;
	/**
	 * In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred.
	 */
	method: code;
	/**
	 * May contain extended information for property: 'method'
	 */
	_method?: Element;
	/**
	 * The URL for this entry, relative to the root (the address to which the request is posted).
	 */
	url: uri;
	/**
	 * May contain extended information for property: 'url'
	 */
	_url?: Element;
}
/**
 * Indicates the results of processing the corresponding 'request' entry in the batch or transaction being responded to or what the results of an operation where when returning history.
 * From: c:/git/fhir\publish\bundle.profile.canonical.json
 */
export interface BundleEntryResponse extends Element {
	/**
	 * The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency)).
	 */
	etag?: string;
	/**
	 * May contain extended information for property: 'etag'
	 */
	_etag?: Element;
	/**
	 * The date/time that the resource was modified on the server.
	 */
	lastModified?: instant;
	/**
	 * May contain extended information for property: 'lastModified'
	 */
	_lastModified?: Element;
	/**
	 * The location header created by processing this operation, populated if the operation returns a location.
	 */
	location?: uri;
	/**
	 * May contain extended information for property: 'location'
	 */
	_location?: Element;
	/**
	 * An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction.
	 */
	outcome?: Resource;
	/**
	 * May contain extended information for property: 'outcome'
	 */
	_outcome?: Element;
	/**
	 * The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code.
	 */
	status: string;
	/**
	 * May contain extended information for property: 'status'
	 */
	_status?: Element;
}
/**
 * Code Values for the BundleEntrySearch.mode field
 */
export enum BundleEntrySearchModeCodes {
	match = "match",
	include = "include",
	outcome = "outcome",
}
/**
 * Information about the search process that lead to the creation of this entry.
 * From: c:/git/fhir\publish\bundle.profile.canonical.json
 */
export interface BundleEntrySearch extends Element {
	/**
	 * There is only one mode. In some corner cases, a resource may be included because it is both a match and an include. In these circumstances, 'match' takes precedence.
	 */
	mode?: code;
	/**
	 * May contain extended information for property: 'mode'
	 */
	_mode?: Element;
	/**
	 * When searching, the server's search ranking score for the entry.
	 */
	score?: decimal;
	/**
	 * May contain extended information for property: 'score'
	 */
	_score?: Element;
}
/**
 * A series of links that provide context to this bundle.
 * From: c:/git/fhir\publish\bundle.profile.canonical.json
 */
export interface BundleLink extends Element {
	/**
	 * A name which details the functional use for this link - see [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1).
	 */
	relation: string;
	/**
	 * May contain extended information for property: 'relation'
	 */
	_relation?: Element;
	/**
	 * The reference details for the link.
	 */
	url: uri;
	/**
	 * May contain extended information for property: 'url'
	 */
	_url?: Element;
}
/**
 * Base StructureDefinition for CodeableConcept Type: A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.
 * From: c:/git/fhir\publish\codeableconcept.profile.canonical.json
 */
export interface CodeableConcept extends Element {
	/**
	 * A reference to a code defined by a terminology system.
	 */
	coding?: Coding[];
	/**
	 * May contain extended information for property: 'coding'
	 */
	_coding?: Element[];
	/**
	 * A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.
	 */
	text?: string;
	/**
	 * May contain extended information for property: 'text'
	 */
	_text?: Element;
}
/**
 * Code Values for the Coding.code field
 */
export enum CodingCodeCodes {
	Symbol = "Symbol",
}
/**
 * Base StructureDefinition for Coding Type: A reference to a code defined by a terminology system.
 * From: c:/git/fhir\publish\coding.profile.canonical.json
 */
export interface Coding extends Element {
	/**
	 * A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
	 */
	code?: code;
	/**
	 * May contain extended information for property: 'code'
	 */
	_code?: Element;
	/**
	 * A representation of the meaning of the code in the system, following the rules of the system.
	 */
	display?: string;
	/**
	 * May contain extended information for property: 'display'
	 */
	_display?: Element;
	/**
	 * The identification of the code system that defines the meaning of the symbol in the code.
	 */
	system?: uri;
	/**
	 * May contain extended information for property: 'system'
	 */
	_system?: Element;
	/**
	 * Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
	 */
	userSelected?: boolean;
	/**
	 * May contain extended information for property: 'userSelected'
	 */
	_userSelected?: Element;
	/**
	 * The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
	 */
	version?: string;
	/**
	 * May contain extended information for property: 'version'
	 */
	_version?: Element;
}
/**
 * Base StructureDefinition for ContactDetail Type: Specifies contact information for a person or organization.
 * From: c:/git/fhir\publish\contactdetail.profile.canonical.json
 */
export interface ContactDetail extends Element {
	/**
	 * The name of an individual to contact.
	 */
	name?: string;
	/**
	 * May contain extended information for property: 'name'
	 */
	_name?: Element;
	/**
	 * The contact details for the individual (if a name was provided) or the organization.
	 */
	telecom?: ContactPoint[];
	/**
	 * May contain extended information for property: 'telecom'
	 */
	_telecom?: Element[];
}
/**
 * Code Values for the ContactPoint.system field
 */
export enum ContactPointSystemCodes {
	phone = "phone",
	fax = "fax",
	email = "email",
	pager = "pager",
	url = "url",
	sms = "sms",
	other = "other",
}
/**
 * Code Values for the ContactPoint.use field
 */
export enum ContactPointUseCodes {
	home = "home",
	work = "work",
	temp = "temp",
	old = "old",
	mobile = "mobile",
}
/**
 * Base StructureDefinition for ContactPoint Type: Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.
 * From: c:/git/fhir\publish\contactpoint.profile.canonical.json
 */
export interface ContactPoint extends Element {
	/**
	 * Time period when the contact point was/is in use.
	 */
	period?: Period;
	/**
	 * May contain extended information for property: 'period'
	 */
	_period?: Element;
	/**
	 * Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values.
	 */
	rank?: positiveInt;
	/**
	 * May contain extended information for property: 'rank'
	 */
	_rank?: Element;
	/**
	 * Telecommunications form for contact point - what communications system is required to make use of the contact.
	 */
	system?: code;
	/**
	 * May contain extended information for property: 'system'
	 */
	_system?: Element;
	/**
	 * Applications can assume that a contact is current unless it explicitly says that it is temporary or old.
	 */
	use?: code;
	/**
	 * May contain extended information for property: 'use'
	 */
	_use?: Element;
	/**
	 * The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address).
	 */
	value?: string;
	/**
	 * May contain extended information for property: 'value'
	 */
	_value?: Element;
}
/**
 * Code Values for the Contributor.type field
 */
export enum ContributorTypeCodes {
	author = "author",
	editor = "editor",
	reviewer = "reviewer",
	endorser = "endorser",
}
/**
 * Base StructureDefinition for Contributor Type: A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.
 * From: c:/git/fhir\publish\contributor.profile.canonical.json
 */
export interface Contributor extends Element {
	/**
	 * Contact details to assist a user in finding and communicating with the contributor.
	 */
	contact?: ContactDetail[];
	/**
	 * May contain extended information for property: 'contact'
	 */
	_contact?: Element[];
	/**
	 * The name of the individual or organization responsible for the contribution.
	 */
	name: string;
	/**
	 * May contain extended information for property: 'name'
	 */
	_name?: Element;
	/**
	 * The type of contributor.
	 */
	type: code;
	/**
	 * May contain extended information for property: 'type'
	 */
	_type?: Element;
}
/**
 * Base StructureDefinition for Count Type: A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.
 * From: c:/git/fhir\publish\count.profile.canonical.json
 */
export type Count = Quantity;
const SubjectType_Account: Coding = {
		code: "Account",
		display: "Account",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ActivityDefinition: Coding = {
		code: "ActivityDefinition",
		display: "ActivityDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_AdministrableProductDefinition: Coding = {
		code: "AdministrableProductDefinition",
		display: "AdministrableProductDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_AdverseEvent: Coding = {
		code: "AdverseEvent",
		display: "AdverseEvent",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_AllergyIntolerance: Coding = {
		code: "AllergyIntolerance",
		display: "AllergyIntolerance",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Appointment: Coding = {
		code: "Appointment",
		display: "Appointment",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_AppointmentResponse: Coding = {
		code: "AppointmentResponse",
		display: "AppointmentResponse",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_AuditEvent: Coding = {
		code: "AuditEvent",
		display: "AuditEvent",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Basic: Coding = {
		code: "Basic",
		display: "Basic",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Binary: Coding = {
		code: "Binary",
		display: "Binary",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_BiologicallyDerivedProduct: Coding = {
		code: "BiologicallyDerivedProduct",
		display: "BiologicallyDerivedProduct",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_BodyStructure: Coding = {
		code: "BodyStructure",
		display: "BodyStructure",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Bundle: Coding = {
		code: "Bundle",
		display: "Bundle",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_CapabilityStatement: Coding = {
		code: "CapabilityStatement",
		display: "CapabilityStatement",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_CapabilityStatement2: Coding = {
		code: "CapabilityStatement2",
		display: "CapabilityStatement2",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_CarePlan: Coding = {
		code: "CarePlan",
		display: "CarePlan",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_CareTeam: Coding = {
		code: "CareTeam",
		display: "CareTeam",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_CatalogEntry: Coding = {
		code: "CatalogEntry",
		display: "CatalogEntry",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ChargeItem: Coding = {
		code: "ChargeItem",
		display: "ChargeItem",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ChargeItemDefinition: Coding = {
		code: "ChargeItemDefinition",
		display: "ChargeItemDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Claim: Coding = {
		code: "Claim",
		display: "Claim",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ClaimResponse: Coding = {
		code: "ClaimResponse",
		display: "ClaimResponse",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ClinicalImpression: Coding = {
		code: "ClinicalImpression",
		display: "ClinicalImpression",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ClinicalUseIssue: Coding = {
		code: "ClinicalUseIssue",
		display: "ClinicalUseIssue",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_CodeSystem: Coding = {
		code: "CodeSystem",
		display: "CodeSystem",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Communication: Coding = {
		code: "Communication",
		display: "Communication",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_CommunicationRequest: Coding = {
		code: "CommunicationRequest",
		display: "CommunicationRequest",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_CompartmentDefinition: Coding = {
		code: "CompartmentDefinition",
		display: "CompartmentDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Composition: Coding = {
		code: "Composition",
		display: "Composition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ConceptMap: Coding = {
		code: "ConceptMap",
		display: "ConceptMap",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Condition: Coding = {
		code: "Condition",
		display: "Condition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ConditionDefinition: Coding = {
		code: "ConditionDefinition",
		display: "ConditionDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Consent: Coding = {
		code: "Consent",
		display: "Consent",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Contract: Coding = {
		code: "Contract",
		display: "Contract",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Coverage: Coding = {
		code: "Coverage",
		display: "Coverage",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_CoverageEligibilityRequest: Coding = {
		code: "CoverageEligibilityRequest",
		display: "CoverageEligibilityRequest",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_CoverageEligibilityResponse: Coding = {
		code: "CoverageEligibilityResponse",
		display: "CoverageEligibilityResponse",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_DetectedIssue: Coding = {
		code: "DetectedIssue",
		display: "DetectedIssue",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Device: Coding = {
		code: "Device",
		display: "Device",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_DeviceDefinition: Coding = {
		code: "DeviceDefinition",
		display: "DeviceDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_DeviceMetric: Coding = {
		code: "DeviceMetric",
		display: "DeviceMetric",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_DeviceRequest: Coding = {
		code: "DeviceRequest",
		display: "DeviceRequest",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_DeviceUseStatement: Coding = {
		code: "DeviceUseStatement",
		display: "DeviceUseStatement",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_DiagnosticReport: Coding = {
		code: "DiagnosticReport",
		display: "DiagnosticReport",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_DocumentManifest: Coding = {
		code: "DocumentManifest",
		display: "DocumentManifest",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_DocumentReference: Coding = {
		code: "DocumentReference",
		display: "DocumentReference",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_DomainResource: Coding = {
		code: "DomainResource",
		display: "DomainResource",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_EffectEvidenceSynthesis: Coding = {
		code: "EffectEvidenceSynthesis",
		display: "EffectEvidenceSynthesis",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Encounter: Coding = {
		code: "Encounter",
		display: "Encounter",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Endpoint: Coding = {
		code: "Endpoint",
		display: "Endpoint",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_EnrollmentRequest: Coding = {
		code: "EnrollmentRequest",
		display: "EnrollmentRequest",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_EnrollmentResponse: Coding = {
		code: "EnrollmentResponse",
		display: "EnrollmentResponse",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_EpisodeOfCare: Coding = {
		code: "EpisodeOfCare",
		display: "EpisodeOfCare",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_EventDefinition: Coding = {
		code: "EventDefinition",
		display: "EventDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Evidence: Coding = {
		code: "Evidence",
		display: "Evidence",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_EvidenceVariable: Coding = {
		code: "EvidenceVariable",
		display: "EvidenceVariable",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ExampleScenario: Coding = {
		code: "ExampleScenario",
		display: "ExampleScenario",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ExplanationOfBenefit: Coding = {
		code: "ExplanationOfBenefit",
		display: "ExplanationOfBenefit",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_FamilyMemberHistory: Coding = {
		code: "FamilyMemberHistory",
		display: "FamilyMemberHistory",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Flag: Coding = {
		code: "Flag",
		display: "Flag",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Goal: Coding = {
		code: "Goal",
		display: "Goal",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_GraphDefinition: Coding = {
		code: "GraphDefinition",
		display: "GraphDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Group: Coding = {
		code: "Group",
		display: "Group",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_GuidanceResponse: Coding = {
		code: "GuidanceResponse",
		display: "GuidanceResponse",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_HealthcareService: Coding = {
		code: "HealthcareService",
		display: "HealthcareService",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ImagingStudy: Coding = {
		code: "ImagingStudy",
		display: "ImagingStudy",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Immunization: Coding = {
		code: "Immunization",
		display: "Immunization",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ImmunizationEvaluation: Coding = {
		code: "ImmunizationEvaluation",
		display: "ImmunizationEvaluation",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ImmunizationRecommendation: Coding = {
		code: "ImmunizationRecommendation",
		display: "ImmunizationRecommendation",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ImplementationGuide: Coding = {
		code: "ImplementationGuide",
		display: "ImplementationGuide",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Ingredient: Coding = {
		code: "Ingredient",
		display: "Ingredient",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_InsurancePlan: Coding = {
		code: "InsurancePlan",
		display: "InsurancePlan",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Invoice: Coding = {
		code: "Invoice",
		display: "Invoice",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Library: Coding = {
		code: "Library",
		display: "Library",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Linkage: Coding = {
		code: "Linkage",
		display: "Linkage",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_List: Coding = {
		code: "List",
		display: "List",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Location: Coding = {
		code: "Location",
		display: "Location",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ManufacturedItemDefinition: Coding = {
		code: "ManufacturedItemDefinition",
		display: "ManufacturedItemDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Measure: Coding = {
		code: "Measure",
		display: "Measure",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_MeasureReport: Coding = {
		code: "MeasureReport",
		display: "MeasureReport",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Media: Coding = {
		code: "Media",
		display: "Media",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Medication: Coding = {
		code: "Medication",
		display: "Medication",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_MedicationAdministration: Coding = {
		code: "MedicationAdministration",
		display: "MedicationAdministration",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_MedicationDispense: Coding = {
		code: "MedicationDispense",
		display: "MedicationDispense",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_MedicationKnowledge: Coding = {
		code: "MedicationKnowledge",
		display: "MedicationKnowledge",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_MedicationRequest: Coding = {
		code: "MedicationRequest",
		display: "MedicationRequest",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_MedicationUsage: Coding = {
		code: "MedicationUsage",
		display: "MedicationUsage",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_MedicinalProductDefinition: Coding = {
		code: "MedicinalProductDefinition",
		display: "MedicinalProductDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_MessageDefinition: Coding = {
		code: "MessageDefinition",
		display: "MessageDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_MessageHeader: Coding = {
		code: "MessageHeader",
		display: "MessageHeader",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_MolecularSequence: Coding = {
		code: "MolecularSequence",
		display: "MolecularSequence",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_NamingSystem: Coding = {
		code: "NamingSystem",
		display: "NamingSystem",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_NutritionIntake: Coding = {
		code: "NutritionIntake",
		display: "NutritionIntake",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_NutritionOrder: Coding = {
		code: "NutritionOrder",
		display: "NutritionOrder",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Observation: Coding = {
		code: "Observation",
		display: "Observation",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ObservationDefinition: Coding = {
		code: "ObservationDefinition",
		display: "ObservationDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_OperationDefinition: Coding = {
		code: "OperationDefinition",
		display: "OperationDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_OperationOutcome: Coding = {
		code: "OperationOutcome",
		display: "OperationOutcome",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Organization: Coding = {
		code: "Organization",
		display: "Organization",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_OrganizationAffiliation: Coding = {
		code: "OrganizationAffiliation",
		display: "OrganizationAffiliation",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_PackagedProductDefinition: Coding = {
		code: "PackagedProductDefinition",
		display: "PackagedProductDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Parameters: Coding = {
		code: "Parameters",
		display: "Parameters",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Patient: Coding = {
		code: "Patient",
		display: "Patient",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_PaymentNotice: Coding = {
		code: "PaymentNotice",
		display: "PaymentNotice",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_PaymentReconciliation: Coding = {
		code: "PaymentReconciliation",
		display: "PaymentReconciliation",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Person: Coding = {
		code: "Person",
		display: "Person",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_PlanDefinition: Coding = {
		code: "PlanDefinition",
		display: "PlanDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Practitioner: Coding = {
		code: "Practitioner",
		display: "Practitioner",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_PractitionerRole: Coding = {
		code: "PractitionerRole",
		display: "PractitionerRole",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Procedure: Coding = {
		code: "Procedure",
		display: "Procedure",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Provenance: Coding = {
		code: "Provenance",
		display: "Provenance",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Questionnaire: Coding = {
		code: "Questionnaire",
		display: "Questionnaire",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_QuestionnaireResponse: Coding = {
		code: "QuestionnaireResponse",
		display: "QuestionnaireResponse",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_RegulatedAuthorization: Coding = {
		code: "RegulatedAuthorization",
		display: "RegulatedAuthorization",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_RelatedPerson: Coding = {
		code: "RelatedPerson",
		display: "RelatedPerson",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_RequestGroup: Coding = {
		code: "RequestGroup",
		display: "RequestGroup",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ResearchDefinition: Coding = {
		code: "ResearchDefinition",
		display: "ResearchDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ResearchElementDefinition: Coding = {
		code: "ResearchElementDefinition",
		display: "ResearchElementDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ResearchStudy: Coding = {
		code: "ResearchStudy",
		display: "ResearchStudy",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ResearchSubject: Coding = {
		code: "ResearchSubject",
		display: "ResearchSubject",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Resource: Coding = {
		code: "Resource",
		display: "Resource",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_RiskAssessment: Coding = {
		code: "RiskAssessment",
		display: "RiskAssessment",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_RiskEvidenceSynthesis: Coding = {
		code: "RiskEvidenceSynthesis",
		display: "RiskEvidenceSynthesis",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Schedule: Coding = {
		code: "Schedule",
		display: "Schedule",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_SearchParameter: Coding = {
		code: "SearchParameter",
		display: "SearchParameter",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ServiceRequest: Coding = {
		code: "ServiceRequest",
		display: "ServiceRequest",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Slot: Coding = {
		code: "Slot",
		display: "Slot",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Specimen: Coding = {
		code: "Specimen",
		display: "Specimen",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_SpecimenDefinition: Coding = {
		code: "SpecimenDefinition",
		display: "SpecimenDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Statistic: Coding = {
		code: "Statistic",
		display: "Statistic",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_StructureDefinition: Coding = {
		code: "StructureDefinition",
		display: "StructureDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_StructureMap: Coding = {
		code: "StructureMap",
		display: "StructureMap",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Subscription: Coding = {
		code: "Subscription",
		display: "Subscription",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Substance: Coding = {
		code: "Substance",
		display: "Substance",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_SubstanceDefinition: Coding = {
		code: "SubstanceDefinition",
		display: "SubstanceDefinition",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_SubstanceNucleicAcid: Coding = {
		code: "SubstanceNucleicAcid",
		display: "SubstanceNucleicAcid",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_SubstancePolymer: Coding = {
		code: "SubstancePolymer",
		display: "SubstancePolymer",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_SubstanceProtein: Coding = {
		code: "SubstanceProtein",
		display: "SubstanceProtein",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_SubstanceReferenceInformation: Coding = {
		code: "SubstanceReferenceInformation",
		display: "SubstanceReferenceInformation",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_SubstanceSourceMaterial: Coding = {
		code: "SubstanceSourceMaterial",
		display: "SubstanceSourceMaterial",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_SupplyDelivery: Coding = {
		code: "SupplyDelivery",
		display: "SupplyDelivery",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_SupplyRequest: Coding = {
		code: "SupplyRequest",
		display: "SupplyRequest",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Task: Coding = {
		code: "Task",
		display: "Task",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_TerminologyCapabilities: Coding = {
		code: "TerminologyCapabilities",
		display: "TerminologyCapabilities",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_TestReport: Coding = {
		code: "TestReport",
		display: "TestReport",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_TestScript: Coding = {
		code: "TestScript",
		display: "TestScript",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_Topic: Coding = {
		code: "Topic",
		display: "Topic",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_ValueSet: Coding = {
		code: "ValueSet",
		display: "ValueSet",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_VerificationResult: Coding = {
		code: "VerificationResult",
		display: "VerificationResult",
		system: "http://hl7.org/fhir/resource-types"
	};
const SubjectType_VisionPrescription: Coding = {
		code: "VisionPrescription",
		display: "VisionPrescription",
		system: "http://hl7.org/fhir/resource-types"
	};
/**
 * Possible types of subjects.
 */
interface SubjectType_Interface {
	/**
	 * A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.
	 */
	Account: Coding,
	/**
	 * This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.
	 */
	ActivityDefinition: Coding,
	/**
	 * A pharmaceutical product described in terms of its composition and dose form.
	 */
	AdministrableProductDefinition: Coding,
	/**
	 * An event (i.e. any change to current patient status) that may be related to unintended effects on a patient or research subject.  The unintended effects may require additional monitoring, treatment or hospitalization or may result in death.  The AdverseEvent resource also extends to potential or avoided events that could have had such effects.
	 */
	AdverseEvent: Coding,
	/**
	 * Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.
	 */
	AllergyIntolerance: Coding,
	/**
	 * A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).
	 */
	Appointment: Coding,
	/**
	 * A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection.
	 */
	AppointmentResponse: Coding,
	/**
	 * A record of an event relevant for purposes such as operations, privacy, security, maintenance, and performance analysis.
	 */
	AuditEvent: Coding,
	/**
	 * Basic is used for handling concepts not yet defined in FHIR, narrative-only resources that don't map to an existing resource, and custom resources not appropriate for inclusion in the FHIR specification.
	 */
	Basic: Coding,
	/**
	 * A resource that represents the data of a single raw artifact as digital content accessible in its native format.  A Binary resource can contain any content, whether text, image, pdf, zip archive, etc.
	 */
	Binary: Coding,
	/**
	 * A material substance originating from a biological entity intended to be transplanted or infused
	 * into another (possibly the same) biological entity.
	 */
	BiologicallyDerivedProduct: Coding,
	/**
	 * Record details about an anatomical structure.  This resource may be used when a coded concept does not provide the necessary detail needed for the use case.
	 */
	BodyStructure: Coding,
	/**
	 * A container for a collection of resources.
	 */
	Bundle: Coding,
	/**
	 * A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
	 */
	CapabilityStatement: Coding,
	/**
	 * A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
	 */
	CapabilityStatement2: Coding,
	/**
	 * Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.
	 */
	CarePlan: Coding,
	/**
	 * The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care.
	 */
	CareTeam: Coding,
	/**
	 * Catalog entries are wrappers that contextualize items included in a catalog.
	 */
	CatalogEntry: Coding,
	/**
	 * The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.
	 */
	ChargeItem: Coding,
	/**
	 * The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.
	 */
	ChargeItemDefinition: Coding,
	/**
	 * A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.
	 */
	Claim: Coding,
	/**
	 * This resource provides the adjudication details from the processing of a Claim resource.
	 */
	ClaimResponse: Coding,
	/**
	 * A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called "ClinicalImpression" rather than "ClinicalAssessment" to avoid confusion with the recording of assessment tools such as Apgar score.
	 */
	ClinicalImpression: Coding,
	/**
	 * A single item of clinical particulars - an indication, contraindication, interaction etc. for a medicinal product.
	 */
	ClinicalUseIssue: Coding,
	/**
	 * The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.
	 */
	CodeSystem: Coding,
	/**
	 * An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency communication to a provider/reporter in response to a case report for a reportable condition.
	 */
	Communication: Coding,
	/**
	 * A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.
	 */
	CommunicationRequest: Coding,
	/**
	 * A compartment definition that defines how resources are accessed on a server.
	 */
	CompartmentDefinition: Coding,
	/**
	 * A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).
	 */
	Composition: Coding,
	/**
	 * A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.
	 */
	ConceptMap: Coding,
	/**
	 * A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.
	 */
	Condition: Coding,
	/**
	 * A definition of a condition and information relevant to managing it.
	 */
	ConditionDefinition: Coding,
	/**
	 * A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.
	 */
	Consent: Coding,
	/**
	 * Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.
	 */
	Contract: Coding,
	/**
	 * Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.
	 */
	Coverage: Coding,
	/**
	 * The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.
	 */
	CoverageEligibilityRequest: Coding,
	/**
	 * This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.
	 */
	CoverageEligibilityResponse: Coding,
	/**
	 * Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc.
	 */
	DetectedIssue: Coding,
	/**
	 * A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.
	 */
	Device: Coding,
	/**
	 * The characteristics, operational status and capabilities of a medical-related component of a medical device.
	 */
	DeviceDefinition: Coding,
	/**
	 * Describes a measurement, calculation or setting capability of a medical device.
	 */
	DeviceMetric: Coding,
	/**
	 * Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker.
	 */
	DeviceRequest: Coding,
	/**
	 * A record of a device being used by a patient where the record is the result of a report from the patient or another clinician.
	 */
	DeviceUseStatement: Coding,
	/**
	 * The findings and interpretation of diagnostic  tests performed on patients, groups of patients, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting and provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports.
	 */
	DiagnosticReport: Coding,
	/**
	 * A collection of documents compiled for a purpose together with metadata that applies to the collection.
	 */
	DocumentManifest: Coding,
	/**
	 * A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.
	 */
	DocumentReference: Coding,
	/**
	 * A resource that includes narrative, extensions, and contained resources.
	 */
	DomainResource: Coding,
	/**
	 * The EffectEvidenceSynthesis resource describes the difference in an outcome between exposures states in a population where the effect estimate is derived from a combination of research studies.
	 */
	EffectEvidenceSynthesis: Coding,
	/**
	 * An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.
	 */
	Encounter: Coding,
	/**
	 * The technical details of an endpoint that can be used for electronic services, such as for web services providing XDS.b or a REST endpoint for another FHIR server. This may include any security context information.
	 */
	Endpoint: Coding,
	/**
	 * This resource provides the insurance enrollment details to the insurer regarding a specified coverage.
	 */
	EnrollmentRequest: Coding,
	/**
	 * This resource provides enrollment and plan details from the processing of an EnrollmentRequest resource.
	 */
	EnrollmentResponse: Coding,
	/**
	 * An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.
	 */
	EpisodeOfCare: Coding,
	/**
	 * The EventDefinition resource provides a reusable description of when a particular event can occur.
	 */
	EventDefinition: Coding,
	/**
	 * The Evidence resource describes the conditional state (population and any exposures being compared within the population) and outcome (if specified) that the knowledge (evidence, assertion, recommendation) is about.
	 */
	Evidence: Coding,
	/**
	 * The EvidenceVariable resource describes a "PICO" element that knowledge (evidence, assertion, recommendation) is about.
	 */
	EvidenceVariable: Coding,
	/**
	 * Example of workflow instance.
	 */
	ExampleScenario: Coding,
	/**
	 * This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
	 */
	ExplanationOfBenefit: Coding,
	/**
	 * Significant health conditions for a person related to the patient relevant in the context of care for the patient.
	 */
	FamilyMemberHistory: Coding,
	/**
	 * Prospective warnings of potential issues when providing care to the patient.
	 */
	Flag: Coding,
	/**
	 * Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.
	 */
	Goal: Coding,
	/**
	 * A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.
	 */
	GraphDefinition: Coding,
	/**
	 * Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.
	 */
	Group: Coding,
	/**
	 * A guidance response is the formal response to a guidance request, including any output parameters returned by the evaluation, as well as the description of any proposed actions to be taken.
	 */
	GuidanceResponse: Coding,
	/**
	 * The details of a healthcare service available at a location.
	 */
	HealthcareService: Coding,
	/**
	 * Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.
	 */
	ImagingStudy: Coding,
	/**
	 * Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.
	 */
	Immunization: Coding,
	/**
	 * Describes a comparison of an immunization event against published recommendations to determine if the administration is "valid" in relation to those  recommendations.
	 */
	ImmunizationEvaluation: Coding,
	/**
	 * A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.
	 */
	ImmunizationRecommendation: Coding,
	/**
	 * A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.
	 */
	ImplementationGuide: Coding,
	/**
	 * An ingredient of a manufactured item or pharmaceutical product.
	 */
	Ingredient: Coding,
	/**
	 * Details of a Health Insurance product/plan provided by an organization.
	 */
	InsurancePlan: Coding,
	/**
	 * Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.
	 */
	Invoice: Coding,
	/**
	 * The Library resource is a general-purpose container for knowledge asset definitions. It can be used to describe and expose existing knowledge assets such as logic libraries and information model descriptions, as well as to describe a collection of knowledge assets.
	 */
	Library: Coding,
	/**
	 * Identifies two or more records (resource instances) that refer to the same real-world "occurrence".
	 */
	Linkage: Coding,
	/**
	 * A list is a curated collection of resources.
	 */
	List: Coding,
	/**
	 * Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.
	 */
	Location: Coding,
	/**
	 * The manufactured item as contained in the packaged medicinal product.
	 */
	ManufacturedItemDefinition: Coding,
	/**
	 * The Measure resource provides the definition of a quality measure.
	 */
	Measure: Coding,
	/**
	 * The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.
	 */
	MeasureReport: Coding,
	/**
	 * A photo, video, or audio recording acquired or used in healthcare. The actual content may be inline or provided by direct reference.
	 */
	Media: Coding,
	/**
	 * This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.
	 */
	Medication: Coding,
	/**
	 * Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.
	 */
	MedicationAdministration: Coding,
	/**
	 * Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order.
	 */
	MedicationDispense: Coding,
	/**
	 * Information about a medication that is used to support knowledge.
	 */
	MedicationKnowledge: Coding,
	/**
	 * An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called "MedicationRequest" rather than "MedicationPrescription" or "MedicationOrder" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.
	 */
	MedicationRequest: Coding,
	/**
	 * A record of a medication that is being consumed by a patient.   A MedicationUsage may indicate that the patient may be taking the medication now or has taken the medication in the past or will be taking the medication in the future.  The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician.  A common scenario where this information is captured is during the history taking process during a patient visit or stay.   The medication information may come from sources such as the patient's memory, from a prescription bottle,  or from a list of medications the patient, clinician or other party maintains. 
	 * 
	 * The primary difference between a medicationusage and a medicationadministration is that the medication administration has complete administration information and is based on actual administration information from the person who administered the medication.  A medicationusage is often, if not always, less specific.  There is no required date/time when the medication was administered, in fact we only know that a source has reported the patient is taking this medication, where details such as time, quantity, or rate or even medication product may be incomplete or missing or less precise.  As stated earlier, the Medication Usage information may come from the patient's memory, from a prescription bottle or from a list of medications the patient, clinician or other party maintains.  Medication administration is more formal and is not missing detailed information.
	 */
	MedicationUsage: Coding,
	/**
	 * Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use).
	 */
	MedicinalProductDefinition: Coding,
	/**
	 * Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.
	 */
	MessageDefinition: Coding,
	/**
	 * The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.
	 */
	MessageHeader: Coding,
	/**
	 * Raw data describing a biological sequence.
	 */
	MolecularSequence: Coding,
	/**
	 * A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a "System" used within the Identifier and Coding data types.
	 */
	NamingSystem: Coding,
	/**
	 * A record of food or fluid that is being consumed by a patient.   A NutritionIntake may indicate that the patient may be consuming the food or fluid now or has consumed the food or fluid in the past.  The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician.  A common scenario where this information is captured is during the history taking process during a patient visit or stay or through an app that tracks food or fluids consumed.   The consumption information may come from sources such as the patient's memory, from a nutrition label,  or from a clinician documenting observed intake.
	 */
	NutritionIntake: Coding,
	/**
	 * A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.
	 */
	NutritionOrder: Coding,
	/**
	 * Measurements and simple assertions made about a patient, device or other subject.
	 */
	Observation: Coding,
	/**
	 * Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.
	 */
	ObservationDefinition: Coding,
	/**
	 * A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).
	 */
	OperationDefinition: Coding,
	/**
	 * A collection of error, warning, or information messages that result from a system action.
	 */
	OperationOutcome: Coding,
	/**
	 * A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.
	 */
	Organization: Coding,
	/**
	 * Defines an affiliation/assotiation/relationship between 2 distinct oganizations, that is not a part-of relationship/sub-division relationship.
	 */
	OrganizationAffiliation: Coding,
	/**
	 * A medicinal product in a container or package.
	 */
	PackagedProductDefinition: Coding,
	/**
	 * This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it.
	 */
	Parameters: Coding,
	/**
	 * Demographics and other administrative information about an individual or animal receiving care or other health-related services.
	 */
	Patient: Coding,
	/**
	 * This resource provides the status of the payment for goods and services rendered, and the request and response resource references.
	 */
	PaymentNotice: Coding,
	/**
	 * This resource provides the details including amount of a payment and allocates the payment items being paid.
	 */
	PaymentReconciliation: Coding,
	/**
	 * Demographics and administrative information about a person independent of a specific health-related context.
	 */
	Person: Coding,
	/**
	 * This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.
	 */
	PlanDefinition: Coding,
	/**
	 * A person who is directly or indirectly involved in the provisioning of healthcare.
	 */
	Practitioner: Coding,
	/**
	 * A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.
	 */
	PractitionerRole: Coding,
	/**
	 * An action that is or was performed on or for a patient. This can be a physical intervention like an operation, or less invasive like long term services, counseling, or hypnotherapy.
	 */
	Procedure: Coding,
	/**
	 * Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.
	 */
	Provenance: Coding,
	/**
	 * A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.
	 */
	Questionnaire: Coding,
	/**
	 * A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.
	 */
	QuestionnaireResponse: Coding,
	/**
	 * The regulatory authorization of a medicinal product.
	 */
	RegulatedAuthorization: Coding,
	/**
	 * Information about a person that is involved in the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process.
	 */
	RelatedPerson: Coding,
	/**
	 * A group of related requests that can be used to capture intended activities that have inter-dependencies such as "give this medication after that one".
	 */
	RequestGroup: Coding,
	/**
	 * The ResearchDefinition resource describes the conditional state (population and any exposures being compared within the population) and outcome (if specified) that the knowledge (evidence, assertion, recommendation) is about.
	 */
	ResearchDefinition: Coding,
	/**
	 * The ResearchElementDefinition resource describes a "PICO" element that knowledge (evidence, assertion, recommendation) is about.
	 */
	ResearchElementDefinition: Coding,
	/**
	 * A process where a researcher or organization plans and then executes a series of steps intended to increase the field of healthcare-related knowledge.  This includes studies of safety, efficacy, comparative effectiveness and other information about medications, devices, therapies and other interventional and investigative techniques.  A ResearchStudy involves the gathering of information about human or animal subjects.
	 */
	ResearchStudy: Coding,
	/**
	 * A physical entity which is the primary unit of operational and/or administrative interest in a study.
	 */
	ResearchSubject: Coding,
	/**
	 * This is the base resource type for everything.
	 */
	Resource: Coding,
	/**
	 * An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.
	 */
	RiskAssessment: Coding,
	/**
	 * The RiskEvidenceSynthesis resource describes the likelihood of an outcome in a population plus exposure state where the risk estimate is derived from a combination of research studies.
	 */
	RiskEvidenceSynthesis: Coding,
	/**
	 * A container for slots of time that may be available for booking appointments.
	 */
	Schedule: Coding,
	/**
	 * A search parameter that defines a named search item that can be used to search/filter on a resource.
	 */
	SearchParameter: Coding,
	/**
	 * A record of a request for service such as diagnostic investigations, treatments, or operations to be performed.
	 */
	ServiceRequest: Coding,
	/**
	 * A slot of time on a schedule that may be available for booking appointments.
	 */
	Slot: Coding,
	/**
	 * A sample to be used for analysis.
	 */
	Specimen: Coding,
	/**
	 * A kind of specimen with associated set of requirements.
	 */
	SpecimenDefinition: Coding,
	/**
	 * The Statistic resource codifies a statistical measure and corresponding certainty.
	 */
	Statistic: Coding,
	/**
	 * A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.
	 */
	StructureDefinition: Coding,
	/**
	 * A Map of relationships between 2 structures that can be used to transform data.
	 */
	StructureMap: Coding,
	/**
	 * The subscription resource describes a particular client's request to be notified about a Topic.
	 */
	Subscription: Coding,
	/**
	 * A homogeneous material with a definite composition.
	 */
	Substance: Coding,
	/**
	 * The detailed description of a substance, typically at a level beyond what is used for prescribing.
	 */
	SubstanceDefinition: Coding,
	/**
	 * Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.
	 */
	SubstanceNucleicAcid: Coding,
	/**
	 * Todo.
	 */
	SubstancePolymer: Coding,
	/**
	 * A SubstanceProtein is defined as a single unit of a linear amino acid sequence, or a combination of subunits that are either covalently linked or have a defined invariant stoichiometric relationship. This includes all synthetic, recombinant and purified SubstanceProteins of defined sequence, whether the use is therapeutic or prophylactic. This set of elements will be used to describe albumins, coagulation factors, cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes, toxins, toxoids, recombinant vaccines, and immunomodulators.
	 */
	SubstanceProtein: Coding,
	/**
	 * Todo.
	 */
	SubstanceReferenceInformation: Coding,
	/**
	 * Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.
	 */
	SubstanceSourceMaterial: Coding,
	/**
	 * Record of delivery of what is supplied.
	 */
	SupplyDelivery: Coding,
	/**
	 * A record of a request for a medication, substance or device used in the healthcare setting.
	 */
	SupplyRequest: Coding,
	/**
	 * A task to be performed.
	 */
	Task: Coding,
	/**
	 * A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
	 */
	TerminologyCapabilities: Coding,
	/**
	 * A summary of information based on the results of executing a TestScript.
	 */
	TestReport: Coding,
	/**
	 * A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
	 */
	TestScript: Coding,
	/**
	 * Describes a stream of resource state changes identified by trigger criteria and annotated with labels useful to filter projections from this topic.
	 */
	Topic: Coding,
	/**
	 * A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).
	 */
	ValueSet: Coding,
	/**
	 * Describes validation requirements, source(s), status and dates for one or more elements.
	 */
	VerificationResult: Coding,
	/**
	 * An authorization for the provision of glasses and/or contact lenses to a patient.
	 */
	VisionPrescription: Coding,
};
/**
 * Possible types of subjects.
 */
export const SubjectType: SubjectType_Interface = {
	Account: SubjectType_Account,
	ActivityDefinition: SubjectType_ActivityDefinition,
	AdministrableProductDefinition: SubjectType_AdministrableProductDefinition,
	AdverseEvent: SubjectType_AdverseEvent,
	AllergyIntolerance: SubjectType_AllergyIntolerance,
	Appointment: SubjectType_Appointment,
	AppointmentResponse: SubjectType_AppointmentResponse,
	AuditEvent: SubjectType_AuditEvent,
	Basic: SubjectType_Basic,
	Binary: SubjectType_Binary,
	BiologicallyDerivedProduct: SubjectType_BiologicallyDerivedProduct,
	BodyStructure: SubjectType_BodyStructure,
	Bundle: SubjectType_Bundle,
	CapabilityStatement: SubjectType_CapabilityStatement,
	CapabilityStatement2: SubjectType_CapabilityStatement2,
	CarePlan: SubjectType_CarePlan,
	CareTeam: SubjectType_CareTeam,
	CatalogEntry: SubjectType_CatalogEntry,
	ChargeItem: SubjectType_ChargeItem,
	ChargeItemDefinition: SubjectType_ChargeItemDefinition,
	Claim: SubjectType_Claim,
	ClaimResponse: SubjectType_ClaimResponse,
	ClinicalImpression: SubjectType_ClinicalImpression,
	ClinicalUseIssue: SubjectType_ClinicalUseIssue,
	CodeSystem: SubjectType_CodeSystem,
	Communication: SubjectType_Communication,
	CommunicationRequest: SubjectType_CommunicationRequest,
	CompartmentDefinition: SubjectType_CompartmentDefinition,
	Composition: SubjectType_Composition,
	ConceptMap: SubjectType_ConceptMap,
	Condition: SubjectType_Condition,
	ConditionDefinition: SubjectType_ConditionDefinition,
	Consent: SubjectType_Consent,
	Contract: SubjectType_Contract,
	Coverage: SubjectType_Coverage,
	CoverageEligibilityRequest: SubjectType_CoverageEligibilityRequest,
	CoverageEligibilityResponse: SubjectType_CoverageEligibilityResponse,
	DetectedIssue: SubjectType_DetectedIssue,
	Device: SubjectType_Device,
	DeviceDefinition: SubjectType_DeviceDefinition,
	DeviceMetric: SubjectType_DeviceMetric,
	DeviceRequest: SubjectType_DeviceRequest,
	DeviceUseStatement: SubjectType_DeviceUseStatement,
	DiagnosticReport: SubjectType_DiagnosticReport,
	DocumentManifest: SubjectType_DocumentManifest,
	DocumentReference: SubjectType_DocumentReference,
	DomainResource: SubjectType_DomainResource,
	EffectEvidenceSynthesis: SubjectType_EffectEvidenceSynthesis,
	Encounter: SubjectType_Encounter,
	Endpoint: SubjectType_Endpoint,
	EnrollmentRequest: SubjectType_EnrollmentRequest,
	EnrollmentResponse: SubjectType_EnrollmentResponse,
	EpisodeOfCare: SubjectType_EpisodeOfCare,
	EventDefinition: SubjectType_EventDefinition,
	Evidence: SubjectType_Evidence,
	EvidenceVariable: SubjectType_EvidenceVariable,
	ExampleScenario: SubjectType_ExampleScenario,
	ExplanationOfBenefit: SubjectType_ExplanationOfBenefit,
	FamilyMemberHistory: SubjectType_FamilyMemberHistory,
	Flag: SubjectType_Flag,
	Goal: SubjectType_Goal,
	GraphDefinition: SubjectType_GraphDefinition,
	Group: SubjectType_Group,
	GuidanceResponse: SubjectType_GuidanceResponse,
	HealthcareService: SubjectType_HealthcareService,
	ImagingStudy: SubjectType_ImagingStudy,
	Immunization: SubjectType_Immunization,
	ImmunizationEvaluation: SubjectType_ImmunizationEvaluation,
	ImmunizationRecommendation: SubjectType_ImmunizationRecommendation,
	ImplementationGuide: SubjectType_ImplementationGuide,
	Ingredient: SubjectType_Ingredient,
	InsurancePlan: SubjectType_InsurancePlan,
	Invoice: SubjectType_Invoice,
	Library: SubjectType_Library,
	Linkage: SubjectType_Linkage,
	List: SubjectType_List,
	Location: SubjectType_Location,
	ManufacturedItemDefinition: SubjectType_ManufacturedItemDefinition,
	Measure: SubjectType_Measure,
	MeasureReport: SubjectType_MeasureReport,
	Media: SubjectType_Media,
	Medication: SubjectType_Medication,
	MedicationAdministration: SubjectType_MedicationAdministration,
	MedicationDispense: SubjectType_MedicationDispense,
	MedicationKnowledge: SubjectType_MedicationKnowledge,
	MedicationRequest: SubjectType_MedicationRequest,
	MedicationUsage: SubjectType_MedicationUsage,
	MedicinalProductDefinition: SubjectType_MedicinalProductDefinition,
	MessageDefinition: SubjectType_MessageDefinition,
	MessageHeader: SubjectType_MessageHeader,
	MolecularSequence: SubjectType_MolecularSequence,
	NamingSystem: SubjectType_NamingSystem,
	NutritionIntake: SubjectType_NutritionIntake,
	NutritionOrder: SubjectType_NutritionOrder,
	Observation: SubjectType_Observation,
	ObservationDefinition: SubjectType_ObservationDefinition,
	OperationDefinition: SubjectType_OperationDefinition,
	OperationOutcome: SubjectType_OperationOutcome,
	Organization: SubjectType_Organization,
	OrganizationAffiliation: SubjectType_OrganizationAffiliation,
	PackagedProductDefinition: SubjectType_PackagedProductDefinition,
	Parameters: SubjectType_Parameters,
	Patient: SubjectType_Patient,
	PaymentNotice: SubjectType_PaymentNotice,
	PaymentReconciliation: SubjectType_PaymentReconciliation,
	Person: SubjectType_Person,
	PlanDefinition: SubjectType_PlanDefinition,
	Practitioner: SubjectType_Practitioner,
	PractitionerRole: SubjectType_PractitionerRole,
	Procedure: SubjectType_Procedure,
	Provenance: SubjectType_Provenance,
	Questionnaire: SubjectType_Questionnaire,
	QuestionnaireResponse: SubjectType_QuestionnaireResponse,
	RegulatedAuthorization: SubjectType_RegulatedAuthorization,
	RelatedPerson: SubjectType_RelatedPerson,
	RequestGroup: SubjectType_RequestGroup,
	ResearchDefinition: SubjectType_ResearchDefinition,
	ResearchElementDefinition: SubjectType_ResearchElementDefinition,
	ResearchStudy: SubjectType_ResearchStudy,
	ResearchSubject: SubjectType_ResearchSubject,
	Resource: SubjectType_Resource,
	RiskAssessment: SubjectType_RiskAssessment,
	RiskEvidenceSynthesis: SubjectType_RiskEvidenceSynthesis,
	Schedule: SubjectType_Schedule,
	SearchParameter: SubjectType_SearchParameter,
	ServiceRequest: SubjectType_ServiceRequest,
	Slot: SubjectType_Slot,
	Specimen: SubjectType_Specimen,
	SpecimenDefinition: SubjectType_SpecimenDefinition,
	Statistic: SubjectType_Statistic,
	StructureDefinition: SubjectType_StructureDefinition,
	StructureMap: SubjectType_StructureMap,
	Subscription: SubjectType_Subscription,
	Substance: SubjectType_Substance,
	SubstanceDefinition: SubjectType_SubstanceDefinition,
	SubstanceNucleicAcid: SubjectType_SubstanceNucleicAcid,
	SubstancePolymer: SubjectType_SubstancePolymer,
	SubstanceProtein: SubjectType_SubstanceProtein,
	SubstanceReferenceInformation: SubjectType_SubstanceReferenceInformation,
	SubstanceSourceMaterial: SubjectType_SubstanceSourceMaterial,
	SupplyDelivery: SubjectType_SupplyDelivery,
	SupplyRequest: SubjectType_SupplyRequest,
	Task: SubjectType_Task,
	TerminologyCapabilities: SubjectType_TerminologyCapabilities,
	TestReport: SubjectType_TestReport,
	TestScript: SubjectType_TestScript,
	Topic: SubjectType_Topic,
	ValueSet: SubjectType_ValueSet,
	VerificationResult: SubjectType_VerificationResult,
	VisionPrescription: SubjectType_VisionPrescription,
}
/*
 * ValueSet alias for http://hl7.org/fhir/ValueSet/subject-type
 */
export const DataRequirementSubjectCodeableConceptValues = SubjectType;
/*
 * ValueSet alias for http://hl7.org/fhir/ValueSet/subject-type
 */
export const DataRequirementSubjectReferenceValues = SubjectType;
/**
 * Code Values for the DataRequirement.type field
 */
export enum DataRequirementTypeCodes {
	The = "The",
}
/**
 * Base StructureDefinition for DataRequirement Type: Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.
 * From: c:/git/fhir\publish\datarequirement.profile.canonical.json
 */
export interface DataRequirement extends Element {
	/**
	 * Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.
	 */
	codeFilter?: DataRequirementCodeFilter[];
	/**
	 * May contain extended information for property: 'codeFilter'
	 */
	_codeFilter?: Element[];
	/**
	 * Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.
	 */
	dateFilter?: DataRequirementDateFilter[];
	/**
	 * May contain extended information for property: 'dateFilter'
	 */
	_dateFilter?: Element[];
	/**
	 * Specifies a maximum number of results that are required (uses the _count search parameter).
	 */
	limit?: positiveInt;
	/**
	 * May contain extended information for property: 'limit'
	 */
	_limit?: Element;
	/**
	 * Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. 
	 * 
	 * The value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).
	 */
	mustSupport?: string[];
	/**
	 * May contain extended information for property: 'mustSupport'
	 */
	_mustSupport?: Element[];
	/**
	 * The profile of the required data, specified as the uri of the profile definition.
	 */
	profile?: canonical[];
	/**
	 * May contain extended information for property: 'profile'
	 */
	_profile?: Element[];
	/**
	 * Specifies the order of the results to be returned.
	 */
	sort?: DataRequirementSort[];
	/**
	 * May contain extended information for property: 'sort'
	 */
	_sort?: Element[];
	/**
	 * The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.
	 */
	subjectCodeableConcept?: CodeableConcept;
	/**
	 * May contain extended information for property: 'subjectCodeableConcept'
	 */
	_subjectCodeableConcept?: Element;
	/**
	 * The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.
	 */
	subjectReference?: Reference;
	/**
	 * May contain extended information for property: 'subjectReference'
	 */
	_subjectReference?: Element;
	/**
	 * The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile.
	 */
	type: code;
	/**
	 * May contain extended information for property: 'type'
	 */
	_type?: Element;
}
/**
 * Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.
 * From: c:/git/fhir\publish\datarequirement.profile.canonical.json
 */
export interface DataRequirementCodeFilter extends Element {
	/**
	 * The codes for the code filter. If values are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, the filter returns items matching a code in the value set or one of the specified codes.
	 */
	code?: Coding[];
	/**
	 * May contain extended information for property: 'code'
	 */
	_code?: Element[];
	/**
	 * The code-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type code, Coding, or CodeableConcept.
	 */
	path?: string;
	/**
	 * May contain extended information for property: 'path'
	 */
	_path?: Element;
	/**
	 * A token parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type code, Coding, or CodeableConcept.
	 */
	searchParam?: string;
	/**
	 * May contain extended information for property: 'searchParam'
	 */
	_searchParam?: Element;
	/**
	 * The valueset for the code filter. The valueSet and code elements are additive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valueset.
	 */
	valueSet?: canonical;
	/**
	 * May contain extended information for property: 'valueSet'
	 */
	_valueSet?: Element;
}
/**
 * Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.
 * From: c:/git/fhir\publish\datarequirement.profile.canonical.json
 */
export interface DataRequirementDateFilter extends Element {
	/**
	 * The date-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type date, dateTime, Period, Schedule, or Timing.
	 */
	path?: string;
	/**
	 * May contain extended information for property: 'path'
	 */
	_path?: Element;
	/**
	 * A date parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type date, dateTime, Period, Schedule, or Timing.
	 */
	searchParam?: string;
	/**
	 * May contain extended information for property: 'searchParam'
	 */
	_searchParam?: Element;
	/**
	 * The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.
	 */
	valueDateTime?: dateTime;
	/**
	 * May contain extended information for property: 'valueDateTime'
	 */
	_valueDateTime?: Element;
	/**
	 * The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.
	 */
	valueDuration?: Duration;
	/**
	 * May contain extended information for property: 'valueDuration'
	 */
	_valueDuration?: Element;
	/**
	 * The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.
	 */
	valuePeriod?: Period;
	/**
	 * May contain extended information for property: 'valuePeriod'
	 */
	_valuePeriod?: Element;
}
/**
 * Code Values for the DataRequirementSort.direction field
 */
export enum DataRequirementSortDirectionCodes {
	ascending = "ascending",
	descending = "descending",
}
/**
 * Specifies the order of the results to be returned.
 * From: c:/git/fhir\publish\datarequirement.profile.canonical.json
 */
export interface DataRequirementSort extends Element {
	/**
	 * The direction of the sort, ascending or descending.
	 */
	direction: code;
	/**
	 * May contain extended information for property: 'direction'
	 */
	_direction?: Element;
	/**
	 * The attribute of the sort. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant.
	 */
	path: string;
	/**
	 * May contain extended information for property: 'path'
	 */
	_path?: Element;
}
/**
 * Base StructureDefinition for Distance Type: A length - a value with a unit that is a physical distance.
 * From: c:/git/fhir\publish\distance.profile.canonical.json
 */
export type Distance = Quantity;
/**
 * A resource that includes narrative, extensions, and contained resources.
 * From: c:/git/fhir\publish\domainresource.profile.canonical.json
 */
export interface DomainResource extends Resource {
	/**
	 * These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
	 */
	contained?: Resource[];
	/**
	 * May contain extended information for property: 'contained'
	 */
	_contained?: Element[];
	/**
	 * May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
	 */
	extension?: Extension[];
	/**
	 * May contain extended information for property: 'extension'
	 */
	_extension?: Element[];
	/**
	 * May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
	 * 
	 * Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
	 */
	modifierExtension?: Extension[];
	/**
	 * May contain extended information for property: 'modifierExtension'
	 */
	_modifierExtension?: Element[];
	/**
	 * A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
	 */
	text?: Narrative;
	/**
	 * May contain extended information for property: 'text'
	 */
	_text?: Element;
}
/**
 * Base StructureDefinition for Dosage Type: Indicates how the medication is/was taken or should be taken by the patient.
 * From: c:/git/fhir\publish\dosage.profile.canonical.json
 */
export interface Dosage extends BackboneElement {
	/**
	 * Supplemental instructions to the patient on how to take the medication  (e.g. "with meals" or"take half to one hour before food") or warnings for the patient about the medication (e.g. "may cause drowsiness" or "avoid exposure of skin to direct sunlight or sunlamps").
	 */
	additionalInstruction?: CodeableConcept[];
	/**
	 * May contain extended information for property: 'additionalInstruction'
	 */
	_additionalInstruction?: Element[];
	/**
	 * Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).
	 */
	asNeededBoolean?: boolean;
	/**
	 * May contain extended information for property: 'asNeededBoolean'
	 */
	_asNeededBoolean?: Element;
	/**
	 * Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).
	 */
	asNeededCodeableConcept?: CodeableConcept;
	/**
	 * May contain extended information for property: 'asNeededCodeableConcept'
	 */
	_asNeededCodeableConcept?: Element;
	/**
	 * The amount of medication administered.
	 */
	doseAndRate?: DosageDoseAndRate[];
	/**
	 * May contain extended information for property: 'doseAndRate'
	 */
	_doseAndRate?: Element[];
	/**
	 * Upper limit on medication per administration.
	 */
	maxDosePerAdministration?: Quantity;
	/**
	 * May contain extended information for property: 'maxDosePerAdministration'
	 */
	_maxDosePerAdministration?: Element;
	/**
	 * Upper limit on medication per lifetime of the patient.
	 */
	maxDosePerLifetime?: Quantity;
	/**
	 * May contain extended information for property: 'maxDosePerLifetime'
	 */
	_maxDosePerLifetime?: Element;
	/**
	 * Upper limit on medication per unit of time.
	 */
	maxDosePerPeriod?: Ratio;
	/**
	 * May contain extended information for property: 'maxDosePerPeriod'
	 */
	_maxDosePerPeriod?: Element;
	/**
	 * Technique for administering medication.
	 */
	method?: CodeableConcept;
	/**
	 * May contain extended information for property: 'method'
	 */
	_method?: Element;
	/**
	 * Instructions in terms that are understood by the patient or consumer.
	 */
	patientInstruction?: string;
	/**
	 * May contain extended information for property: 'patientInstruction'
	 */
	_patientInstruction?: Element;
	/**
	 * How drug should enter body.
	 */
	route?: CodeableConcept;
	/**
	 * May contain extended information for property: 'route'
	 */
	_route?: Element;
	/**
	 * Indicates the order in which the dosage instructions should be applied or interpreted.
	 */
	sequence?: integer;
	/**
	 * May contain extended information for property: 'sequence'
	 */
	_sequence?: Element;
	/**
	 * Body site to administer to.
	 */
	site?: CodeableConcept;
	/**
	 * May contain extended information for property: 'site'
	 */
	_site?: Element;
	/**
	 * Free text dosage instructions e.g. SIG.
	 */
	text?: string;
	/**
	 * May contain extended information for property: 'text'
	 */
	_text?: Element;
	/**
	 * When medication should be administered.
	 */
	timing?: Timing;
	/**
	 * May contain extended information for property: 'timing'
	 */
	_timing?: Element;
}
const DoseAndRateType_calculated: Coding = {
		code: "calculated",
		display: "Calculated",
		system: "http://terminology.hl7.org/CodeSystem/dose-rate-type"
	};
const DoseAndRateType_ordered: Coding = {
		code: "ordered",
		display: "Ordered",
		system: "http://terminology.hl7.org/CodeSystem/dose-rate-type"
	};
/**
 * The kind of dose or rate specified.
 */
interface DoseAndRateType_Interface {
	/**
	 * The dose specified is calculated by the prescriber or the system.
	 */
	calculated: Coding,
	/**
	 * The dose specified is as ordered by the prescriber.
	 */
	ordered: Coding,
};
/**
 * The kind of dose or rate specified.
 */
export const DoseAndRateType: DoseAndRateType_Interface = {
	calculated: DoseAndRateType_calculated,
	ordered: DoseAndRateType_ordered,
}
/*
 * ValueSet alias for http://hl7.org/fhir/ValueSet/dose-rate-type
 */
export const DosageDoseAndRateTypeValues = DoseAndRateType;
/**
 * The amount of medication administered.
 * From: c:/git/fhir\publish\dosage.profile.canonical.json
 */
export interface DosageDoseAndRate extends Element {
	/**
	 * Amount of medication per dose.
	 */
	doseQuantity?: Quantity;
	/**
	 * May contain extended information for property: 'doseQuantity'
	 */
	_doseQuantity?: Element;
	/**
	 * Amount of medication per dose.
	 */
	doseRange?: Range;
	/**
	 * May contain extended information for property: 'doseRange'
	 */
	_doseRange?: Element;
	/**
	 * Amount of medication per unit of time.
	 */
	rateQuantity?: Quantity;
	/**
	 * May contain extended information for property: 'rateQuantity'
	 */
	_rateQuantity?: Element;
	/**
	 * Amount of medication per unit of time.
	 */
	rateRange?: Range;
	/**
	 * May contain extended information for property: 'rateRange'
	 */
	_rateRange?: Element;
	/**
	 * Amount of medication per unit of time.
	 */
	rateRatio?: Ratio;
	/**
	 * May contain extended information for property: 'rateRatio'
	 */
	_rateRatio?: Element;
	/**
	 * The kind of dose or rate specified, for example, ordered or calculated.
	 */
	type?: CodeableConcept;
	/**
	 * May contain extended information for property: 'type'
	 */
	_type?: Element;
}
/**
 * Base StructureDefinition for Duration Type: A length of time.
 * From: c:/git/fhir\publish\duration.profile.canonical.json
 */
export type Duration = Quantity;
/**
 * Base StructureDefinition for Element Type: Base definition for all elements in a resource.
 * From: c:/git/fhir\publish\element.profile.canonical.json
 */
export interface Element {
	/**
	 * May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
	 */
	extension?: Extension[];
	/**
	 * May contain extended information for property: 'extension'
	 */
	_extension?: Element[];
	/**
	 * Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
	 */
	id?: string;
	/**
	 * May contain extended information for property: 'id'
	 */
	_id?: Element;
}
/**
 * Code Values for the Expression.language field
 */
export enum ExpressionLanguageCodes {
	text_cql = "text/cql",
	text_fhirpath = "text/fhirpath",
	application_x_fhir_query = "application/x-fhir-query",
	etc_ = "etc.",
}
/**
 * Base StructureDefinition for Expression Type: A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.
 * From: c:/git/fhir\publish\expression.profile.canonical.json
 */
export interface Expression extends Element {
	/**
	 * A brief, natural language description of the condition that effectively communicates the intended semantics.
	 */
	description?: string;
	/**
	 * May contain extended information for property: 'description'
	 */
	_description?: Element;
	/**
	 * An expression in the specified language that returns a value.
	 */
	expression?: string;
	/**
	 * May contain extended information for property: 'expression'
	 */
	_expression?: Element;
	/**
	 * The media type of the language for the expression.
	 */
	language: code;
	/**
	 * May contain extended information for property: 'language'
	 */
	_language?: Element;
	/**
	 * A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined.
	 */
	name?: id;
	/**
	 * May contain extended information for property: 'name'
	 */
	_name?: Element;
	/**
	 * A URI that defines where the expression is found.
	 */
	reference?: uri;
	/**
	 * May contain extended information for property: 'reference'
	 */
	_reference?: Element;
}
/**
 * Code Values for the Extension.valueCode field
 */
export enum ExtensionValueCodeCodes {
	Value = "Value",
}
/**
 * Base StructureDefinition for Extension Type: Optional Extension Element - found in all resources.
 * From: c:/git/fhir\publish\extension.profile.canonical.json
 */
export interface Extension extends Element {
	/**
	 * Source of the definition for the extension code - a logical name or a URL.
	 */
	url: string;
	/**
	 * May contain extended information for property: 'url'
	 */
	_url?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueAddress?: Address;
	/**
	 * May contain extended information for property: 'valueAddress'
	 */
	_valueAddress?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueAge?: Age;
	/**
	 * May contain extended information for property: 'valueAge'
	 */
	_valueAge?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueAnnotation?: Annotation;
	/**
	 * May contain extended information for property: 'valueAnnotation'
	 */
	_valueAnnotation?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueAttachment?: Attachment;
	/**
	 * May contain extended information for property: 'valueAttachment'
	 */
	_valueAttachment?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueBase64Binary?: base64Binary;
	/**
	 * May contain extended information for property: 'valueBase64Binary'
	 */
	_valueBase64Binary?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueBoolean?: boolean;
	/**
	 * May contain extended information for property: 'valueBoolean'
	 */
	_valueBoolean?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueCanonical?: canonical;
	/**
	 * May contain extended information for property: 'valueCanonical'
	 */
	_valueCanonical?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueCode?: code;
	/**
	 * May contain extended information for property: 'valueCode'
	 */
	_valueCode?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueCodeableConcept?: CodeableConcept;
	/**
	 * May contain extended information for property: 'valueCodeableConcept'
	 */
	_valueCodeableConcept?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueCoding?: Coding;
	/**
	 * May contain extended information for property: 'valueCoding'
	 */
	_valueCoding?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueContactDetail?: ContactDetail;
	/**
	 * May contain extended information for property: 'valueContactDetail'
	 */
	_valueContactDetail?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueContactPoint?: ContactPoint;
	/**
	 * May contain extended information for property: 'valueContactPoint'
	 */
	_valueContactPoint?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueContributor?: Contributor;
	/**
	 * May contain extended information for property: 'valueContributor'
	 */
	_valueContributor?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueCount?: Count;
	/**
	 * May contain extended information for property: 'valueCount'
	 */
	_valueCount?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueDataRequirement?: DataRequirement;
	/**
	 * May contain extended information for property: 'valueDataRequirement'
	 */
	_valueDataRequirement?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueDate?: date;
	/**
	 * May contain extended information for property: 'valueDate'
	 */
	_valueDate?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueDateTime?: dateTime;
	/**
	 * May contain extended information for property: 'valueDateTime'
	 */
	_valueDateTime?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueDecimal?: decimal;
	/**
	 * May contain extended information for property: 'valueDecimal'
	 */
	_valueDecimal?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueDistance?: Distance;
	/**
	 * May contain extended information for property: 'valueDistance'
	 */
	_valueDistance?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueDosage?: Dosage;
	/**
	 * May contain extended information for property: 'valueDosage'
	 */
	_valueDosage?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueDuration?: Duration;
	/**
	 * May contain extended information for property: 'valueDuration'
	 */
	_valueDuration?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueExpression?: Expression;
	/**
	 * May contain extended information for property: 'valueExpression'
	 */
	_valueExpression?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueHumanName?: HumanName;
	/**
	 * May contain extended information for property: 'valueHumanName'
	 */
	_valueHumanName?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueId?: id;
	/**
	 * May contain extended information for property: 'valueId'
	 */
	_valueId?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueIdentifier?: Identifier;
	/**
	 * May contain extended information for property: 'valueIdentifier'
	 */
	_valueIdentifier?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueInstant?: instant;
	/**
	 * May contain extended information for property: 'valueInstant'
	 */
	_valueInstant?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueInteger?: integer;
	/**
	 * May contain extended information for property: 'valueInteger'
	 */
	_valueInteger?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueMarkdown?: markdown;
	/**
	 * May contain extended information for property: 'valueMarkdown'
	 */
	_valueMarkdown?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueMeta?: Meta;
	/**
	 * May contain extended information for property: 'valueMeta'
	 */
	_valueMeta?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueMoney?: Money;
	/**
	 * May contain extended information for property: 'valueMoney'
	 */
	_valueMoney?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueOid?: oid;
	/**
	 * May contain extended information for property: 'valueOid'
	 */
	_valueOid?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueParameterDefinition?: ParameterDefinition;
	/**
	 * May contain extended information for property: 'valueParameterDefinition'
	 */
	_valueParameterDefinition?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valuePeriod?: Period;
	/**
	 * May contain extended information for property: 'valuePeriod'
	 */
	_valuePeriod?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valuePositiveInt?: positiveInt;
	/**
	 * May contain extended information for property: 'valuePositiveInt'
	 */
	_valuePositiveInt?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueQuantity?: Quantity;
	/**
	 * May contain extended information for property: 'valueQuantity'
	 */
	_valueQuantity?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueRange?: Range;
	/**
	 * May contain extended information for property: 'valueRange'
	 */
	_valueRange?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueRatio?: Ratio;
	/**
	 * May contain extended information for property: 'valueRatio'
	 */
	_valueRatio?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueReference?: Reference;
	/**
	 * May contain extended information for property: 'valueReference'
	 */
	_valueReference?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueRelatedArtifact?: RelatedArtifact;
	/**
	 * May contain extended information for property: 'valueRelatedArtifact'
	 */
	_valueRelatedArtifact?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueSampledData?: SampledData;
	/**
	 * May contain extended information for property: 'valueSampledData'
	 */
	_valueSampledData?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueSignature?: Signature;
	/**
	 * May contain extended information for property: 'valueSignature'
	 */
	_valueSignature?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueString?: string;
	/**
	 * May contain extended information for property: 'valueString'
	 */
	_valueString?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueTime?: time;
	/**
	 * May contain extended information for property: 'valueTime'
	 */
	_valueTime?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueTiming?: Timing;
	/**
	 * May contain extended information for property: 'valueTiming'
	 */
	_valueTiming?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueTriggerDefinition?: TriggerDefinition;
	/**
	 * May contain extended information for property: 'valueTriggerDefinition'
	 */
	_valueTriggerDefinition?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueUnsignedInt?: unsignedInt;
	/**
	 * May contain extended information for property: 'valueUnsignedInt'
	 */
	_valueUnsignedInt?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueUri?: uri;
	/**
	 * May contain extended information for property: 'valueUri'
	 */
	_valueUri?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueUrl?: url;
	/**
	 * May contain extended information for property: 'valueUrl'
	 */
	_valueUrl?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueUsageContext?: UsageContext;
	/**
	 * May contain extended information for property: 'valueUsageContext'
	 */
	_valueUsageContext?: Element;
	/**
	 * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
	 */
	valueUuid?: uuid;
	/**
	 * May contain extended information for property: 'valueUuid'
	 */
	_valueUuid?: Element;
}
/**
 * Code Values for the HumanName.use field
 */
export enum HumanNameUseCodes {
	usual = "usual",
	official = "official",
	temp = "temp",
	nickname = "nickname",
	anonymous = "anonymous",
	old = "old",
	maiden = "maiden",
}
/**
 * Base StructureDefinition for HumanName Type: A human's name with the ability to identify parts and usage.
 * From: c:/git/fhir\publish\humanname.profile.canonical.json
 */
export interface HumanName extends Element {
	/**
	 * The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father.
	 */
	family?: string;
	/**
	 * May contain extended information for property: 'family'
	 */
	_family?: Element;
	/**
	 * Given name.
	 */
	given?: string[];
	/**
	 * May contain extended information for property: 'given'
	 */
	_given?: Element[];
	/**
	 * Indicates the period of time when this name was valid for the named person.
	 */
	period?: Period;
	/**
	 * May contain extended information for property: 'period'
	 */
	_period?: Element;
	/**
	 * Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.
	 */
	prefix?: string[];
	/**
	 * May contain extended information for property: 'prefix'
	 */
	_prefix?: Element[];
	/**
	 * Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.
	 */
	suffix?: string[];
	/**
	 * May contain extended information for property: 'suffix'
	 */
	_suffix?: Element[];
	/**
	 * Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts.
	 */
	text?: string;
	/**
	 * May contain extended information for property: 'text'
	 */
	_text?: Element;
	/**
	 * Applications can assume that a name is current unless it explicitly says that it is temporary or old.
	 */
	use?: code;
	/**
	 * May contain extended information for property: 'use'
	 */
	_use?: Element;
}
const Identifier_Type_Codes_AC: Coding = {
		code: "AC",
		display: "Accreditation/Certification Identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_ACSN: Coding = {
		code: "ACSN",
		display: "Accession ID",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_AM: Coding = {
		code: "AM",
		display: "American Express",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_AMA: Coding = {
		code: "AMA",
		display: "American Medical Association Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_AN: Coding = {
		code: "AN",
		display: "Account number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_ANC: Coding = {
		code: "ANC",
		display: "Account number Creditor",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_AND: Coding = {
		code: "AND",
		display: "Account number debitor",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_ANON: Coding = {
		code: "ANON",
		display: "Anonymous identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_ANT: Coding = {
		code: "ANT",
		display: "Temporary Account Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_APRN: Coding = {
		code: "APRN",
		display: "Advanced Practice Registered Nurse number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_ASID: Coding = {
		code: "ASID",
		display: "Ancestor Specimen ID",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_BA: Coding = {
		code: "BA",
		display: "Bank Account Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_BC: Coding = {
		code: "BC",
		display: "Bank Card Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_BCFN: Coding = {
		code: "BCFN",
		display: "Birth Certificate File Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_BCT: Coding = {
		code: "BCT",
		display: "Birth Certificate",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_BR: Coding = {
		code: "BR",
		display: "Birth registry number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_BRN: Coding = {
		code: "BRN",
		display: "Breed Registry Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_BSNR: Coding = {
		code: "BSNR",
		display: "Primary physician office number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_CC: Coding = {
		code: "CC",
		display: "Cost Center number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_CONM: Coding = {
		code: "CONM",
		display: "Change of Name Document",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_CY: Coding = {
		code: "CY",
		display: "County number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_CZ: Coding = {
		code: "CZ",
		display: "Citizenship Card",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_DC: Coding = {
		code: "DC",
		display: "Death Certificate ID",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_DCFN: Coding = {
		code: "DCFN",
		display: "Death Certificate File Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_DDS: Coding = {
		code: "DDS",
		display: "Dentist license number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_DEA: Coding = {
		code: "DEA",
		display: "Drug Enforcement Administration registration number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_DFN: Coding = {
		code: "DFN",
		display: "Drug Furnishing or prescriptive authority Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_DI: Coding = {
		code: "DI",
		display: "Diner's Club card",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_DL: Coding = {
		code: "DL",
		display: "Driver's license number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_DN: Coding = {
		code: "DN",
		display: "Doctor number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_DO: Coding = {
		code: "DO",
		display: "Osteopathic License number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_DP: Coding = {
		code: "DP",
		display: "Diplomatic Passport",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_DPM: Coding = {
		code: "DPM",
		display: "Podiatrist license number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_DR: Coding = {
		code: "DR",
		display: "Donor Registration Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_DS: Coding = {
		code: "DS",
		display: "Discover Card",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_EI: Coding = {
		code: "EI",
		display: "Employee number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_EN: Coding = {
		code: "EN",
		display: "Employer number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_ESN: Coding = {
		code: "ESN",
		display: "Staff Enterprise Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_FDR: Coding = {
		code: "FDR",
		display: "Fetal Death Report ID",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_FDRFN: Coding = {
		code: "FDRFN",
		display: "Fetal Death Report File Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_FI: Coding = {
		code: "FI",
		display: "Facility ID",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_FILL: Coding = {
		code: "FILL",
		display: "Filler Identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_GI: Coding = {
		code: "GI",
		display: "Guarantor internal identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_GL: Coding = {
		code: "GL",
		display: "General ledger number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_GN: Coding = {
		code: "GN",
		display: "Guarantor external  identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_HC: Coding = {
		code: "HC",
		display: "Health Card Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_IND: Coding = {
		code: "IND",
		display: "Indigenous/Aboriginal",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_JHN: Coding = {
		code: "JHN",
		display: "Jurisdictional health number (Canada)",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_LACSN: Coding = {
		code: "LACSN",
		display: "Laboratory Accession ID",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_LANR: Coding = {
		code: "LANR",
		display: "Lifelong physician number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_LI: Coding = {
		code: "LI",
		display: "Labor and industries number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_LN: Coding = {
		code: "LN",
		display: "License number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_LR: Coding = {
		code: "LR",
		display: "Local Registry ID",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_MA: Coding = {
		code: "MA",
		display: "Patient Medicaid number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_MB: Coding = {
		code: "MB",
		display: "Member Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_MC: Coding = {
		code: "MC",
		display: "Patient's Medicare number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_MCD: Coding = {
		code: "MCD",
		display: "Practitioner Medicaid number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_MCN: Coding = {
		code: "MCN",
		display: "Microchip Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_MCR: Coding = {
		code: "MCR",
		display: "Practitioner Medicare number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_MCT: Coding = {
		code: "MCT",
		display: "Marriage Certificate",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_MD: Coding = {
		code: "MD",
		display: "Medical License number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_MI: Coding = {
		code: "MI",
		display: "Military ID number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_MR: Coding = {
		code: "MR",
		display: "Medical record number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_MRT: Coding = {
		code: "MRT",
		display: "Temporary Medical Record Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_MS: Coding = {
		code: "MS",
		display: "MasterCard",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_NBSNR: Coding = {
		code: "NBSNR",
		display: "Secondary physician office number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_NCT: Coding = {
		code: "NCT",
		display: "Naturalization Certificate",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_NE: Coding = {
		code: "NE",
		display: "National employer identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_NH: Coding = {
		code: "NH",
		display: "National Health Plan Identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_NI: Coding = {
		code: "NI",
		display: "National unique individual identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_NII: Coding = {
		code: "NII",
		display: "National Insurance Organization Identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_NIIP: Coding = {
		code: "NIIP",
		display: "National Insurance Payor Identifier (Payor)",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_NNxxx: Coding = {
		code: "NNxxx",
		display: "National Person Identifier where the xxx is the ISO table 3166 3-character (alphabetic) country code",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_NP: Coding = {
		code: "NP",
		display: "Nurse practitioner number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_NPI: Coding = {
		code: "NPI",
		display: "National provider identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_OBI: Coding = {
		code: "OBI",
		display: "Observation Instance Identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_OD: Coding = {
		code: "OD",
		display: "Optometrist license number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PA: Coding = {
		code: "PA",
		display: "Physician Assistant number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PC: Coding = {
		code: "PC",
		display: "Parole Card",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PCN: Coding = {
		code: "PCN",
		display: "Penitentiary/correctional institution Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PE: Coding = {
		code: "PE",
		display: "Living Subject Enterprise Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PEN: Coding = {
		code: "PEN",
		display: "Pension Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PHC: Coding = {
		code: "PHC",
		display: "Public Health Case Identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PHE: Coding = {
		code: "PHE",
		display: "Public Health Event Identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PHO: Coding = {
		code: "PHO",
		display: "Public Health Official ID",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PI: Coding = {
		code: "PI",
		display: "Patient internal identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PLAC: Coding = {
		code: "PLAC",
		display: "Placer Identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PN: Coding = {
		code: "PN",
		display: "Person number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PNT: Coding = {
		code: "PNT",
		display: "Temporary Living Subject Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PPIN: Coding = {
		code: "PPIN",
		display: "Medicare/CMS Performing Provider Identification Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PPN: Coding = {
		code: "PPN",
		display: "Passport number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PRC: Coding = {
		code: "PRC",
		display: "Permanent Resident Card Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PRN: Coding = {
		code: "PRN",
		display: "Provider number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_PT: Coding = {
		code: "PT",
		display: "Patient external identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_QA: Coding = {
		code: "QA",
		display: "QA number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_RI: Coding = {
		code: "RI",
		display: "Resource identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_RN: Coding = {
		code: "RN",
		display: "Registered Nurse Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_RPH: Coding = {
		code: "RPH",
		display: "Pharmacist license number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_RR: Coding = {
		code: "RR",
		display: "Railroad Retirement number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_RRI: Coding = {
		code: "RRI",
		display: "Regional registry ID",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_RRP: Coding = {
		code: "RRP",
		display: "Railroad Retirement Provider",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_SB: Coding = {
		code: "SB",
		display: "Social Beneficiary Identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_SID: Coding = {
		code: "SID",
		display: "Specimen ID",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_SL: Coding = {
		code: "SL",
		display: "State license",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_SN: Coding = {
		code: "SN",
		display: "Subscriber Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_SNBSN: Coding = {
		code: "SNBSN",
		display: "State assigned NDBS card Identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_SNO: Coding = {
		code: "SNO",
		display: "Serial Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_SP: Coding = {
		code: "SP",
		display: "Study Permit",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_SR: Coding = {
		code: "SR",
		display: "State registry ID",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_SS: Coding = {
		code: "SS",
		display: "Social Security number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_STN: Coding = {
		code: "STN",
		display: "Shipment Tracking Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_TAX: Coding = {
		code: "TAX",
		display: "Tax ID number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_TN: Coding = {
		code: "TN",
		display: "Treaty Number/ (Canada)",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_TPR: Coding = {
		code: "TPR",
		display: "Temporary Permanent Resident (Canada)",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_TRL: Coding = {
		code: "TRL",
		display: "Training License Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_U: Coding = {
		code: "U",
		display: "Unspecified identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_UDI: Coding = {
		code: "UDI",
		display: "Universal Device Identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_UPIN: Coding = {
		code: "UPIN",
		display: "Medicare/CMS (formerly HCFA)'s Universal Physician Identification numbers",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_USID: Coding = {
		code: "USID",
		display: "Unique Specimen ID",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_VN: Coding = {
		code: "VN",
		display: "Visit number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_VP: Coding = {
		code: "VP",
		display: "Visitor Permit",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_VS: Coding = {
		code: "VS",
		display: "VISA",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_WC: Coding = {
		code: "WC",
		display: "WIC identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_WCN: Coding = {
		code: "WCN",
		display: "Workers' Comp Number",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_WP: Coding = {
		code: "WP",
		display: "Work Permit",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_XV: Coding = {
		code: "XV",
		display: "Health Plan Identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
const Identifier_Type_Codes_XX: Coding = {
		code: "XX",
		display: "Organization identifier",
		system: "http://terminology.hl7.org/CodeSystem/v2-0203"
	};
/**
 * A coded type for an identifier that can be used to determine which identifier to use for a specific purpose.
 */
interface Identifier_Type_Codes_Interface {
	/**
	 * Accreditation/Certification Identifier
	 */
	AC: Coding,
	/**
	 * Accession ID
	 */
	ACSN: Coding,
	/**
	 * American Express
	 */
	AM: Coding,
	/**
	 * American Medical Association Number
	 */
	AMA: Coding,
	/**
	 * Account number
	 */
	AN: Coding,
	/**
	 * Account number Creditor
	 */
	ANC: Coding,
	/**
	 * Account number debitor
	 */
	AND: Coding,
	/**
	 * Anonymous identifier
	 */
	ANON: Coding,
	/**
	 * Temporary Account Number
	 */
	ANT: Coding,
	/**
	 * Advanced Practice Registered Nurse number
	 */
	APRN: Coding,
	/**
	 * Ancestor Specimen ID
	 */
	ASID: Coding,
	/**
	 * Bank Account Number
	 */
	BA: Coding,
	/**
	 * Bank Card Number
	 */
	BC: Coding,
	/**
	 * Birth Certificate File Number
	 */
	BCFN: Coding,
	/**
	 * Birth Certificate
	 */
	BCT: Coding,
	/**
	 * Birth registry number
	 */
	BR: Coding,
	/**
	 * Breed Registry Number
	 */
	BRN: Coding,
	/**
	 * Primary physician office number
	 */
	BSNR: Coding,
	/**
	 * Cost Center number
	 */
	CC: Coding,
	/**
	 * Change of Name Document
	 */
	CONM: Coding,
	/**
	 * County number
	 */
	CY: Coding,
	/**
	 * Citizenship Card
	 */
	CZ: Coding,
	/**
	 * Death Certificate ID
	 */
	DC: Coding,
	/**
	 * Death Certificate File Number
	 */
	DCFN: Coding,
	/**
	 * Dentist license number
	 */
	DDS: Coding,
	/**
	 * Drug Enforcement Administration registration number
	 */
	DEA: Coding,
	/**
	 * Drug Furnishing or prescriptive authority Number
	 */
	DFN: Coding,
	/**
	 * Diner's Club card
	 */
	DI: Coding,
	/**
	 * Driver's license number
	 */
	DL: Coding,
	/**
	 * Doctor number
	 */
	DN: Coding,
	/**
	 * Osteopathic License number
	 */
	DO: Coding,
	/**
	 * Diplomatic Passport
	 */
	DP: Coding,
	/**
	 * Podiatrist license number
	 */
	DPM: Coding,
	/**
	 * Donor Registration Number
	 */
	DR: Coding,
	/**
	 * Discover Card
	 */
	DS: Coding,
	/**
	 * Employee number
	 */
	EI: Coding,
	/**
	 * Employer number
	 */
	EN: Coding,
	/**
	 * Staff Enterprise Number
	 */
	ESN: Coding,
	/**
	 * Fetal Death Report ID
	 */
	FDR: Coding,
	/**
	 * Fetal Death Report File Number
	 */
	FDRFN: Coding,
	/**
	 * Facility ID
	 */
	FI: Coding,
	/**
	 * Filler Identifier
	 */
	FILL: Coding,
	/**
	 * Guarantor internal identifier
	 */
	GI: Coding,
	/**
	 * General ledger number
	 */
	GL: Coding,
	/**
	 * Guarantor external  identifier
	 */
	GN: Coding,
	/**
	 * Health Card Number
	 */
	HC: Coding,
	/**
	 * Indigenous/Aboriginal
	 */
	IND: Coding,
	/**
	 * Jurisdictional health number (Canada)
	 */
	JHN: Coding,
	/**
	 * Laboratory Accession ID
	 */
	LACSN: Coding,
	/**
	 * Lifelong physician number
	 */
	LANR: Coding,
	/**
	 * Labor and industries number
	 */
	LI: Coding,
	/**
	 * License number
	 */
	LN: Coding,
	/**
	 * Local Registry ID
	 */
	LR: Coding,
	/**
	 * Patient Medicaid number
	 */
	MA: Coding,
	/**
	 * Member Number
	 */
	MB: Coding,
	/**
	 * Patient's Medicare number
	 */
	MC: Coding,
	/**
	 * Practitioner Medicaid number
	 */
	MCD: Coding,
	/**
	 * Microchip Number
	 */
	MCN: Coding,
	/**
	 * Practitioner Medicare number
	 */
	MCR: Coding,
	/**
	 * Marriage Certificate
	 */
	MCT: Coding,
	/**
	 * Medical License number
	 */
	MD: Coding,
	/**
	 * Military ID number
	 */
	MI: Coding,
	/**
	 * Medical record number
	 */
	MR: Coding,
	/**
	 * Temporary Medical Record Number
	 */
	MRT: Coding,
	/**
	 * MasterCard
	 */
	MS: Coding,
	/**
	 * Secondary physician office number
	 */
	NBSNR: Coding,
	/**
	 * Naturalization Certificate
	 */
	NCT: Coding,
	/**
	 * National employer identifier
	 */
	NE: Coding,
	/**
	 * National Health Plan Identifier
	 */
	NH: Coding,
	/**
	 * National unique individual identifier
	 */
	NI: Coding,
	/**
	 * National Insurance Organization Identifier
	 */
	NII: Coding,
	/**
	 * National Insurance Payor Identifier (Payor)
	 */
	NIIP: Coding,
	/**
	 * National Person Identifier where the xxx is the ISO table 3166 3-character (alphabetic) country code
	 */
	NNxxx: Coding,
	/**
	 * Nurse practitioner number
	 */
	NP: Coding,
	/**
	 * National provider identifier
	 */
	NPI: Coding,
	/**
	 * Observation Instance Identifier
	 */
	OBI: Coding,
	/**
	 * Optometrist license number
	 */
	OD: Coding,
	/**
	 * Physician Assistant number
	 */
	PA: Coding,
	/**
	 * Parole Card
	 */
	PC: Coding,
	/**
	 * Penitentiary/correctional institution Number
	 */
	PCN: Coding,
	/**
	 * Living Subject Enterprise Number
	 */
	PE: Coding,
	/**
	 * Pension Number
	 */
	PEN: Coding,
	/**
	 * Public Health Case Identifier
	 */
	PHC: Coding,
	/**
	 * Public Health Event Identifier
	 */
	PHE: Coding,
	/**
	 * Public Health Official ID
	 */
	PHO: Coding,
	/**
	 * Patient internal identifier
	 */
	PI: Coding,
	/**
	 * Placer Identifier
	 */
	PLAC: Coding,
	/**
	 * Person number
	 */
	PN: Coding,
	/**
	 * Temporary Living Subject Number
	 */
	PNT: Coding,
	/**
	 * Medicare/CMS Performing Provider Identification Number
	 */
	PPIN: Coding,
	/**
	 * Passport number
	 */
	PPN: Coding,
	/**
	 * Permanent Resident Card Number
	 */
	PRC: Coding,
	/**
	 * Provider number
	 */
	PRN: Coding,
	/**
	 * Patient external identifier
	 */
	PT: Coding,
	/**
	 * QA number
	 */
	QA: Coding,
	/**
	 * Resource identifier
	 */
	RI: Coding,
	/**
	 * Registered Nurse Number
	 */
	RN: Coding,
	/**
	 * Pharmacist license number
	 */
	RPH: Coding,
	/**
	 * Railroad Retirement number
	 */
	RR: Coding,
	/**
	 * Regional registry ID
	 */
	RRI: Coding,
	/**
	 * Railroad Retirement Provider
	 */
	RRP: Coding,
	/**
	 * Social Beneficiary Identifier
	 */
	SB: Coding,
	/**
	 * Specimen ID
	 */
	SID: Coding,
	/**
	 * State license
	 */
	SL: Coding,
	/**
	 * Subscriber Number
	 */
	SN: Coding,
	/**
	 * State assigned NDBS card Identifier
	 */
	SNBSN: Coding,
	/**
	 * Serial Number
	 */
	SNO: Coding,
	/**
	 * Study Permit
	 */
	SP: Coding,
	/**
	 * State registry ID
	 */
	SR: Coding,
	/**
	 * Social Security number
	 */
	SS: Coding,
	/**
	 * Shipment Tracking Number
	 */
	STN: Coding,
	/**
	 * Tax ID number
	 */
	TAX: Coding,
	/**
	 * Treaty Number/ (Canada)
	 */
	TN: Coding,
	/**
	 * Temporary Permanent Resident (Canada)
	 */
	TPR: Coding,
	/**
	 * Training License Number
	 */
	TRL: Coding,
	/**
	 * Unspecified identifier
	 */
	U: Coding,
	/**
	 * Universal Device Identifier
	 */
	UDI: Coding,
	/**
	 * Medicare/CMS (formerly HCFA)'s Universal Physician Identification numbers
	 */
	UPIN: Coding,
	/**
	 * Unique Specimen ID
	 */
	USID: Coding,
	/**
	 * Visit number
	 */
	VN: Coding,
	/**
	 * Visitor Permit
	 */
	VP: Coding,
	/**
	 * VISA
	 */
	VS: Coding,
	/**
	 * WIC identifier
	 */
	WC: Coding,
	/**
	 * Workers' Comp Number
	 */
	WCN: Coding,
	/**
	 * Work Permit
	 */
	WP: Coding,
	/**
	 * Health Plan Identifier
	 */
	XV: Coding,
	/**
	 * Organization identifier
	 */
	XX: Coding,
};
/**
 * A coded type for an identifier that can be used to determine which identifier to use for a specific purpose.
 */
export const Identifier_Type_Codes: Identifier_Type_Codes_Interface = {
	AC: Identifier_Type_Codes_AC,
	ACSN: Identifier_Type_Codes_ACSN,
	AM: Identifier_Type_Codes_AM,
	AMA: Identifier_Type_Codes_AMA,
	AN: Identifier_Type_Codes_AN,
	ANC: Identifier_Type_Codes_ANC,
	AND: Identifier_Type_Codes_AND,
	ANON: Identifier_Type_Codes_ANON,
	ANT: Identifier_Type_Codes_ANT,
	APRN: Identifier_Type_Codes_APRN,
	ASID: Identifier_Type_Codes_ASID,
	BA: Identifier_Type_Codes_BA,
	BC: Identifier_Type_Codes_BC,
	BCFN: Identifier_Type_Codes_BCFN,
	BCT: Identifier_Type_Codes_BCT,
	BR: Identifier_Type_Codes_BR,
	BRN: Identifier_Type_Codes_BRN,
	BSNR: Identifier_Type_Codes_BSNR,
	CC: Identifier_Type_Codes_CC,
	CONM: Identifier_Type_Codes_CONM,
	CY: Identifier_Type_Codes_CY,
	CZ: Identifier_Type_Codes_CZ,
	DC: Identifier_Type_Codes_DC,
	DCFN: Identifier_Type_Codes_DCFN,
	DDS: Identifier_Type_Codes_DDS,
	DEA: Identifier_Type_Codes_DEA,
	DFN: Identifier_Type_Codes_DFN,
	DI: Identifier_Type_Codes_DI,
	DL: Identifier_Type_Codes_DL,
	DN: Identifier_Type_Codes_DN,
	DO: Identifier_Type_Codes_DO,
	DP: Identifier_Type_Codes_DP,
	DPM: Identifier_Type_Codes_DPM,
	DR: Identifier_Type_Codes_DR,
	DS: Identifier_Type_Codes_DS,
	EI: Identifier_Type_Codes_EI,
	EN: Identifier_Type_Codes_EN,
	ESN: Identifier_Type_Codes_ESN,
	FDR: Identifier_Type_Codes_FDR,
	FDRFN: Identifier_Type_Codes_FDRFN,
	FI: Identifier_Type_Codes_FI,
	FILL: Identifier_Type_Codes_FILL,
	GI: Identifier_Type_Codes_GI,
	GL: Identifier_Type_Codes_GL,
	GN: Identifier_Type_Codes_GN,
	HC: Identifier_Type_Codes_HC,
	IND: Identifier_Type_Codes_IND,
	JHN: Identifier_Type_Codes_JHN,
	LACSN: Identifier_Type_Codes_LACSN,
	LANR: Identifier_Type_Codes_LANR,
	LI: Identifier_Type_Codes_LI,
	LN: Identifier_Type_Codes_LN,
	LR: Identifier_Type_Codes_LR,
	MA: Identifier_Type_Codes_MA,
	MB: Identifier_Type_Codes_MB,
	MC: Identifier_Type_Codes_MC,
	MCD: Identifier_Type_Codes_MCD,
	MCN: Identifier_Type_Codes_MCN,
	MCR: Identifier_Type_Codes_MCR,
	MCT: Identifier_Type_Codes_MCT,
	MD: Identifier_Type_Codes_MD,
	MI: Identifier_Type_Codes_MI,
	MR: Identifier_Type_Codes_MR,
	MRT: Identifier_Type_Codes_MRT,
	MS: Identifier_Type_Codes_MS,
	NBSNR: Identifier_Type_Codes_NBSNR,
	NCT: Identifier_Type_Codes_NCT,
	NE: Identifier_Type_Codes_NE,
	NH: Identifier_Type_Codes_NH,
	NI: Identifier_Type_Codes_NI,
	NII: Identifier_Type_Codes_NII,
	NIIP: Identifier_Type_Codes_NIIP,
	NNxxx: Identifier_Type_Codes_NNxxx,
	NP: Identifier_Type_Codes_NP,
	NPI: Identifier_Type_Codes_NPI,
	OBI: Identifier_Type_Codes_OBI,
	OD: Identifier_Type_Codes_OD,
	PA: Identifier_Type_Codes_PA,
	PC: Identifier_Type_Codes_PC,
	PCN: Identifier_Type_Codes_PCN,
	PE: Identifier_Type_Codes_PE,
	PEN: Identifier_Type_Codes_PEN,
	PHC: Identifier_Type_Codes_PHC,
	PHE: Identifier_Type_Codes_PHE,
	PHO: Identifier_Type_Codes_PHO,
	PI: Identifier_Type_Codes_PI,
	PLAC: Identifier_Type_Codes_PLAC,
	PN: Identifier_Type_Codes_PN,
	PNT: Identifier_Type_Codes_PNT,
	PPIN: Identifier_Type_Codes_PPIN,
	PPN: Identifier_Type_Codes_PPN,
	PRC: Identifier_Type_Codes_PRC,
	PRN: Identifier_Type_Codes_PRN,
	PT: Identifier_Type_Codes_PT,
	QA: Identifier_Type_Codes_QA,
	RI: Identifier_Type_Codes_RI,
	RN: Identifier_Type_Codes_RN,
	RPH: Identifier_Type_Codes_RPH,
	RR: Identifier_Type_Codes_RR,
	RRI: Identifier_Type_Codes_RRI,
	RRP: Identifier_Type_Codes_RRP,
	SB: Identifier_Type_Codes_SB,
	SID: Identifier_Type_Codes_SID,
	SL: Identifier_Type_Codes_SL,
	SN: Identifier_Type_Codes_SN,
	SNBSN: Identifier_Type_Codes_SNBSN,
	SNO: Identifier_Type_Codes_SNO,
	SP: Identifier_Type_Codes_SP,
	SR: Identifier_Type_Codes_SR,
	SS: Identifier_Type_Codes_SS,
	STN: Identifier_Type_Codes_STN,
	TAX: Identifier_Type_Codes_TAX,
	TN: Identifier_Type_Codes_TN,
	TPR: Identifier_Type_Codes_TPR,
	TRL: Identifier_Type_Codes_TRL,
	U: Identifier_Type_Codes_U,
	UDI: Identifier_Type_Codes_UDI,
	UPIN: Identifier_Type_Codes_UPIN,
	USID: Identifier_Type_Codes_USID,
	VN: Identifier_Type_Codes_VN,
	VP: Identifier_Type_Codes_VP,
	VS: Identifier_Type_Codes_VS,
	WC: Identifier_Type_Codes_WC,
	WCN: Identifier_Type_Codes_WCN,
	WP: Identifier_Type_Codes_WP,
	XV: Identifier_Type_Codes_XV,
	XX: Identifier_Type_Codes_XX,
}
/*
 * ValueSet alias for http://hl7.org/fhir/ValueSet/identifier-type
 */
export const IdentifierTypeValues = Identifier_Type_Codes;
/**
 * Code Values for the Identifier.use field
 */
export enum IdentifierUseCodes {
	usual = "usual",
	official = "official",
	temp = "temp",
	secondary = "secondary",
	old = "old",
}
/**
 * Base StructureDefinition for Identifier Type: An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.
 * From: c:/git/fhir\publish\identifier.profile.canonical.json
 */
export interface Identifier extends Element {
	/**
	 * Organization that issued/manages the identifier.
	 */
	assigner?: Reference;
	/**
	 * May contain extended information for property: 'assigner'
	 */
	_assigner?: Element;
	/**
	 * Time period during which identifier is/was valid for use.
	 */
	period?: Period;
	/**
	 * May contain extended information for property: 'period'
	 */
	_period?: Element;
	/**
	 * Establishes the namespace for the value - that is, a URL that describes a set values that are unique.
	 */
	system?: uri;
	/**
	 * May contain extended information for property: 'system'
	 */
	_system?: Element;
	/**
	 * A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.
	 */
	type?: CodeableConcept;
	/**
	 * May contain extended information for property: 'type'
	 */
	_type?: Element;
	/**
	 * Applications can assume that an identifier is permanent unless it explicitly says that it is temporary.
	 */
	use?: code;
	/**
	 * May contain extended information for property: 'use'
	 */
	_use?: Element;
	/**
	 * The portion of the identifier typically relevant to the user and which is unique within the context of the system.
	 */
	value?: string;
	/**
	 * May contain extended information for property: 'value'
	 */
	_value?: Element;
}
const CommonTags_actionable: Coding = {
		code: "actionable",
		display: "Actionable",
		system: "http://terminology.hl7.org/CodeSystem/common-tags"
	};
/**
 * Common Tag Codes defined by FHIR project
 */
interface CommonTags_Interface {
	/**
	 * This request is intended to be acted upon, not merely stored
	 */
	actionable: Coding,
};
/**
 * Common Tag Codes defined by FHIR project
 */
export const CommonTags: CommonTags_Interface = {
	actionable: CommonTags_actionable,
}
/*
 * ValueSet alias for http://hl7.org/fhir/ValueSet/common-tags
 */
export const MetaTagValues = CommonTags;
/**
 * Base StructureDefinition for Meta Type: The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
 * From: c:/git/fhir\publish\meta.profile.canonical.json
 */
export interface Meta extends Element {
	/**
	 * When the resource last changed - e.g. when the version changed.
	 */
	lastUpdated?: instant;
	/**
	 * May contain extended information for property: 'lastUpdated'
	 */
	_lastUpdated?: Element;
	/**
	 * A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition-definitions.html#StructureDefinition.url).
	 */
	profile?: canonical[];
	/**
	 * May contain extended information for property: 'profile'
	 */
	_profile?: Element[];
	/**
	 * Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.
	 */
	security?: Coding[];
	/**
	 * May contain extended information for property: 'security'
	 */
	_security?: Element[];
	/**
	 * A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.
	 */
	source?: uri;
	/**
	 * May contain extended information for property: 'source'
	 */
	_source?: Element;
	/**
	 * Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.
	 */
	tag?: Coding[];
	/**
	 * May contain extended information for property: 'tag'
	 */
	_tag?: Element[];
	/**
	 * The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.
	 */
	versionId?: id;
	/**
	 * May contain extended information for property: 'versionId'
	 */
	_versionId?: Element;
}
/**
 * Code Values for the Money.currency field
 */
export enum MoneyCurrencyCodes {
	ISO = "ISO",
}
/**
 * Base StructureDefinition for Money Type: An amount of economic utility in some recognized currency.
 * From: c:/git/fhir\publish\money.profile.canonical.json
 */
export interface Money extends Element {
	/**
	 * ISO 4217 Currency Code.
	 */
	currency?: code;
	/**
	 * May contain extended information for property: 'currency'
	 */
	_currency?: Element;
	/**
	 * Numerical value (with implicit precision).
	 */
	value?: decimal;
	/**
	 * May contain extended information for property: 'value'
	 */
	_value?: Element;
}
/**
 * Code Values for the Narrative.status field
 */
export enum NarrativeStatusCodes {
	generated = "generated",
	extensions = "extensions",
	additional = "additional",
	empty = "empty",
}
/**
 * Base StructureDefinition for Narrative Type: A human-readable summary of the resource conveying the essential clinical and business information for the resource.
 * From: c:/git/fhir\publish\narrative.profile.canonical.json
 */
export interface Narrative extends Element {
	/**
	 * The actual narrative content, a stripped down version of XHTML.
	 */
	div: xhtml;
	/**
	 * May contain extended information for property: 'div'
	 */
	_div?: Element;
	/**
	 * The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.
	 */
	status: code;
	/**
	 * May contain extended information for property: 'status'
	 */
	_status?: Element;
}
/**
 * Code Values for the ParameterDefinition.name field
 */
export enum ParameterDefinitionNameCodes {
	Name = "Name",
}
/**
 * Code Values for the ParameterDefinition.type field
 */
export enum ParameterDefinitionTypeCodes {
	What = "What",
}
/**
 * Code Values for the ParameterDefinition.use field
 */
export enum ParameterDefinitionUseCodes {
	VAL_in = "in",
	VAL_out = "out",
}
/**
 * Base StructureDefinition for ParameterDefinition Type: The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.
 * From: c:/git/fhir\publish\parameterdefinition.profile.canonical.json
 */
export interface ParameterDefinition extends Element {
	/**
	 * A brief discussion of what the parameter is for and how it is used by the module.
	 */
	documentation?: string;
	/**
	 * May contain extended information for property: 'documentation'
	 */
	_documentation?: Element;
	/**
	 * The maximum number of times this element is permitted to appear in the request or response.
	 */
	max?: string;
	/**
	 * May contain extended information for property: 'max'
	 */
	_max?: Element;
	/**
	 * The minimum number of times this parameter SHALL appear in the request or response.
	 */
	min?: integer;
	/**
	 * May contain extended information for property: 'min'
	 */
	_min?: Element;
	/**
	 * The name of the parameter used to allow access to the value of the parameter in evaluation contexts.
	 */
	name?: code;
	/**
	 * May contain extended information for property: 'name'
	 */
	_name?: Element;
	/**
	 * If specified, this indicates a profile that the input data must conform to, or that the output data will conform to.
	 */
	profile?: canonical;
	/**
	 * May contain extended information for property: 'profile'
	 */
	_profile?: Element;
	/**
	 * The type of the parameter.
	 */
	type: code;
	/**
	 * May contain extended information for property: 'type'
	 */
	_type?: Element;
	/**
	 * Whether the parameter is input or output for the module.
	 */
	use: code;
	/**
	 * May contain extended information for property: 'use'
	 */
	_use?: Element;
}
const Marital_Status_Codes_A: Coding = {
		code: "A",
		display: "Annulled",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_D: Coding = {
		code: "D",
		display: "Divorced",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_I: Coding = {
		code: "I",
		display: "Interlocutory",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_L: Coding = {
		code: "L",
		display: "Legally Separated",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_M: Coding = {
		code: "M",
		display: "Married",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_P: Coding = {
		code: "P",
		display: "Polygamous",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_S: Coding = {
		code: "S",
		display: "Never Married",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_T: Coding = {
		code: "T",
		display: "Domestic partner",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_W: Coding = {
		code: "W",
		display: "Widowed",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_INV: Coding = {
		code: "INV",
		display: "invalid",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_DER: Coding = {
		code: "DER",
		display: "derived",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_OTH: Coding = {
		code: "OTH",
		display: "other",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_NINF: Coding = {
		code: "NINF",
		display: "negative infinity",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_PINF: Coding = {
		code: "PINF",
		display: "positive infinity",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_UNC: Coding = {
		code: "UNC",
		display: "un-encoded",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_MSK: Coding = {
		code: "MSK",
		display: "masked",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_NA: Coding = {
		code: "NA",
		display: "not applicable",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_UNK: Coding = {
		code: "UNK",
		display: "unknown",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_ASKU: Coding = {
		code: "ASKU",
		display: "asked but unknown",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_NAV: Coding = {
		code: "NAV",
		display: "temporarily unavailable",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_NASK: Coding = {
		code: "NASK",
		display: "not asked",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_NAVU: Coding = {
		code: "NAVU",
		display: "Not available",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_QS: Coding = {
		code: "QS",
		display: "Sufficient Quantity",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
const Marital_Status_Codes_TRC: Coding = {
		code: "TRC",
		display: "trace",
		system: "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
	};
/**
 * This value set defines the set of codes that can be used to indicate the marital status of a person.
 */
interface Marital_Status_Codes_Interface {
	/**
	 * Marriage contract has been declared null and to not have existed
	 */
	A: Coding,
	/**
	 * Marriage contract has been declared dissolved and inactive
	 */
	D: Coding,
	/**
	 * Subject to an Interlocutory Decree.
	 */
	I: Coding,
	/**
	 * Legally Separated
	 */
	L: Coding,
	/**
	 * A current marriage contract is active
	 */
	M: Coding,
	/**
	 * More than 1 current spouse
	 */
	P: Coding,
	/**
	 * No marriage contract has ever been entered
	 */
	S: Coding,
	/**
	 * Person declares that a domestic partner relationship exists.
	 */
	T: Coding,
	/**
	 * The spouse has died
	 */
	W: Coding,
	/**
	 * Description:The value as represented in the instance is not a member of the set of permitted data values in the constrained value domain of a variable.
	 */
	INV: Coding,
	/**
	 * Description:An actual value may exist, but it must be derived from the provided information (usually an EXPR generic data type extension will be used to convey the derivation expressionexpression .
	 */
	DER: Coding,
	/**
	 * Description:The actual value is not a member of the set of permitted data values in the constrained value domain of a variable. (e.g., concept not provided by required code system).
	 * 
	 *                         
	 *                            Usage Notes: This flavor and its specializations are most commonly used with the CD datatype and its flavors.  However, it may apply to *any* datatype where the constraints of the type are tighter than can be conveyed.  For example, a PQ that is for a true measured amount whose units are not supported in UCUM, a need to convey a REAL when the type has been constrained to INT, etc.
	 * 
	 *                         With coded datatypes, this null flavor may only be used if the vocabulary binding has a coding strength of CNE.  By definition, all local codes and original text are part of the value set if the coding strength is CWE.
	 */
	OTH: Coding,
	/**
	 * Negative infinity of numbers.
	 */
	NINF: Coding,
	/**
	 * Positive infinity of numbers.
	 */
	PINF: Coding,
	/**
	 * Description: The actual value has not yet been encoded within the approved value domain.
	 * 
	 *                         
	 *                            Example: Original text or a local code has been specified but translation or encoding to the approved value set has not yet occurred due to limitations of the sending system.  Original text has been captured for a PQ, but not attempt has been made to split the value and unit or to encode the unit in UCUM.
	 * 
	 *                         
	 *                            Usage Notes: If it is known that it is not possible to encode the concept, OTH should be used instead.  However, use of UNC does not necessarily guarantee the concept will be encodable, only that encoding has not been attempted.
	 * 
	 *                         Data type properties such as original text and translations may be present when this null flavor is included.
	 */
	UNC: Coding,
	/**
	 * There is information on this item available but it has not been provided by the sender due to security, privacy or other reasons. There may be an alternate mechanism for gaining access to this information.
	 * 
	 *                         Note: using this null flavor does provide information that may be a breach of confidentiality, even though no detail data is provided.  Its primary purpose is for those circumstances where it is necessary to inform the receiver that the information does exist without providing any detail.
	 */
	MSK: Coding,
	/**
	 * Known to have no proper value (e.g., last menstrual period for a male).
	 */
	NA: Coding,
	/**
	 * Description:A proper value is applicable, but not known.
	 * 
	 *                         
	 *                            Usage Notes: This means the actual value is not known.  If the only thing that is unknown is how to properly express the value in the necessary constraints (value set, datatype, etc.), then the OTH or UNC flavor should be used.  No properties should be included for a datatype with this property unless:
	 * 
	 *                         
	 *                            Those properties themselves directly translate to a semantic of "unknown".  (E.g. a local code sent as a translation that conveys 'unknown')
	 *                            Those properties further qualify the nature of what is unknown.  (E.g. specifying a use code of "H" and a URL prefix of "tel:" to convey that it is the home phone number that is unknown.)
	 */
	UNK: Coding,
	/**
	 * Information was sought but not found (e.g., patient was asked but didn't know)
	 */
	ASKU: Coding,
	/**
	 * Information is not available at this time but it is expected that it will be available later.
	 */
	NAV: Coding,
	/**
	 * This information has not been sought (e.g., patient was not asked)
	 */
	NASK: Coding,
	/**
	 * Information is not available at this time (with no expectation regarding whether it will or will not be available in the future).
	 */
	NAVU: Coding,
	/**
	 * Description:The specific quantity is not known, but is known to be non-zero and is not specified because it makes up the bulk of the material. e.g. 'Add 10mg of ingredient X, 50mg of ingredient Y, and sufficient quantity of water to 100mL.' The null flavor would be used to express the quantity of water.
	 */
	QS: Coding,
	/**
	 * The content is greater than zero, but too small to be quantified.
	 */
	TRC: Coding,
};
/**
 * This value set defines the set of codes that can be used to indicate the marital status of a person.
 */
export const Marital_Status_Codes: Marital_Status_Codes_Interface = {
	A: Marital_Status_Codes_A,
	D: Marital_Status_Codes_D,
	I: Marital_Status_Codes_I,
	L: Marital_Status_Codes_L,
	M: Marital_Status_Codes_M,
	P: Marital_Status_Codes_P,
	S: Marital_Status_Codes_S,
	T: Marital_Status_Codes_T,
	W: Marital_Status_Codes_W,
	INV: Marital_Status_Codes_INV,
	DER: Marital_Status_Codes_DER,
	OTH: Marital_Status_Codes_OTH,
	NINF: Marital_Status_Codes_NINF,
	PINF: Marital_Status_Codes_PINF,
	UNC: Marital_Status_Codes_UNC,
	MSK: Marital_Status_Codes_MSK,
	NA: Marital_Status_Codes_NA,
	UNK: Marital_Status_Codes_UNK,
	ASKU: Marital_Status_Codes_ASKU,
	NAV: Marital_Status_Codes_NAV,
	NASK: Marital_Status_Codes_NASK,
	NAVU: Marital_Status_Codes_NAVU,
	QS: Marital_Status_Codes_QS,
	TRC: Marital_Status_Codes_TRC,
}
/*
 * ValueSet alias for http://hl7.org/fhir/ValueSet/marital-status
 */
export const PatientMaritalStatusValues = Marital_Status_Codes;
/**
 * Code Values for the Patient.gender field
 */
export enum PatientGenderCodes {
	male = "male",
	female = "female",
	other = "other",
	unknown = "unknown",
}
/**
 * Demographics and other administrative information about an individual or animal receiving care or other health-related services.
 * From: c:/git/fhir\publish\patient.profile.canonical.json
 */
export interface Patient extends DomainResource {
	/** Resource Type Name (for serialization) */
	resourceType: 'Patient';
	/**
	 * Whether this patient record is in active use. 
	 * Many systems use this property to mark as non-current patients, such as those that have not been seen for a period of time based on an organization's business rules.
	 * 
	 * It is often used to filter patient lists to exclude inactive patients
	 * 
	 * Deceased patients may also be marked as inactive for the same reasons, but may be active for some time after death.
	 */
	active?: boolean;
	/**
	 * May contain extended information for property: 'active'
	 */
	_active?: Element;
	/**
	 * An address for the individual.
	 */
	address?: Address[];
	/**
	 * May contain extended information for property: 'address'
	 */
	_address?: Element[];
	/**
	 * The date of birth for the individual.
	 */
	birthDate?: date;
	/**
	 * May contain extended information for property: 'birthDate'
	 */
	_birthDate?: Element;
	/**
	 * A language which may be used to communicate with the patient about his or her health.
	 */
	communication?: PatientCommunication[];
	/**
	 * May contain extended information for property: 'communication'
	 */
	_communication?: Element[];
	/**
	 * A contact party (e.g. guardian, partner, friend) for the patient.
	 */
	contact?: PatientContact[];
	/**
	 * May contain extended information for property: 'contact'
	 */
	_contact?: Element[];
	/**
	 * Indicates if the individual is deceased or not.
	 */
	deceasedBoolean?: boolean;
	/**
	 * May contain extended information for property: 'deceasedBoolean'
	 */
	_deceasedBoolean?: Element;
	/**
	 * Indicates if the individual is deceased or not.
	 */
	deceasedDateTime?: dateTime;
	/**
	 * May contain extended information for property: 'deceasedDateTime'
	 */
	_deceasedDateTime?: Element;
	/**
	 * The gender might not match the biological sex as determined by genetics or the individual's preferred identification. Note that for both humans and particularly animals, there are other legitimate possibilities than male and female, though the vast majority of systems and contexts only support male and female.  Systems providing decision support or enforcing business rules should ideally do this on the basis of Observations dealing with the specific sex or gender aspect of interest (anatomical, chromosomal, social, etc.)  However, because these observations are infrequently recorded, defaulting to the administrative gender is common practice.  Where such defaulting occurs, rule enforcement should allow for the variation between administrative and biological, chromosomal and other gender aspects.  For example, an alert about a hysterectomy on a male should be handled as a warning or overridable error, not a "hard" error.  See the Patient Gender and Sex section for additional information about communicating patient gender and sex.
	 */
	gender?: code;
	/**
	 * May contain extended information for property: 'gender'
	 */
	_gender?: Element;
	/**
	 * Patient's nominated care provider.
	 */
	generalPractitioner?: Reference[];
	/**
	 * May contain extended information for property: 'generalPractitioner'
	 */
	_generalPractitioner?: Element[];
	/**
	 * An identifier for this patient.
	 */
	identifier?: Identifier[];
	/**
	 * May contain extended information for property: 'identifier'
	 */
	_identifier?: Element[];
	/**
	 * Link to another patient resource that concerns the same actual patient.
	 */
	link?: PatientLink[];
	/**
	 * May contain extended information for property: 'link'
	 */
	_link?: Element[];
	/**
	 * Organization that is the custodian of the patient record.
	 */
	managingOrganization?: Reference;
	/**
	 * May contain extended information for property: 'managingOrganization'
	 */
	_managingOrganization?: Element;
	/**
	 * This field contains a patient's most recent marital (civil) status.
	 */
	maritalStatus?: CodeableConcept;
	/**
	 * May contain extended information for property: 'maritalStatus'
	 */
	_maritalStatus?: Element;
	/**
	 * Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer).
	 */
	multipleBirthBoolean?: boolean;
	/**
	 * May contain extended information for property: 'multipleBirthBoolean'
	 */
	_multipleBirthBoolean?: Element;
	/**
	 * Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer).
	 */
	multipleBirthInteger?: integer;
	/**
	 * May contain extended information for property: 'multipleBirthInteger'
	 */
	_multipleBirthInteger?: Element;
	/**
	 * A name associated with the individual.
	 */
	name?: HumanName[];
	/**
	 * May contain extended information for property: 'name'
	 */
	_name?: Element[];
	/**
	 * Image of the patient.
	 */
	photo?: Attachment[];
	/**
	 * May contain extended information for property: 'photo'
	 */
	_photo?: Element[];
	/**
	 * A contact detail (e.g. a telephone number or an email address) by which the individual may be contacted.
	 */
	telecom?: ContactPoint[];
	/**
	 * May contain extended information for property: 'telecom'
	 */
	_telecom?: Element[];
}
/**
 * A language which may be used to communicate with the patient about his or her health.
 * From: c:/git/fhir\publish\patient.profile.canonical.json
 */
export interface PatientCommunication extends Element {
	/**
	 * The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. "en" for English, or "en-US" for American English versus "en-EN" for England English.
	 */
	language: CodeableConcept;
	/**
	 * May contain extended information for property: 'language'
	 */
	_language?: Element;
	/**
	 * Indicates whether or not the patient prefers this language (over other languages he masters up a certain level).
	 */
	preferred?: boolean;
	/**
	 * May contain extended information for property: 'preferred'
	 */
	_preferred?: Element;
}
/**
 * Code Values for the PatientContact.gender field
 */
export enum PatientContactGenderCodes {
	male = "male",
	female = "female",
	other = "other",
	unknown = "unknown",
}
/**
 * A contact party (e.g. guardian, partner, friend) for the patient.
 * From: c:/git/fhir\publish\patient.profile.canonical.json
 */
export interface PatientContact extends Element {
	/**
	 * Address for the contact person.
	 */
	address?: Address;
	/**
	 * May contain extended information for property: 'address'
	 */
	_address?: Element;
	/**
	 * Administrative Gender - the gender that the contact person is considered to have for administration and record keeping purposes.
	 */
	gender?: code;
	/**
	 * May contain extended information for property: 'gender'
	 */
	_gender?: Element;
	/**
	 * A name associated with the contact person.
	 */
	name?: HumanName;
	/**
	 * May contain extended information for property: 'name'
	 */
	_name?: Element;
	/**
	 * Organization on behalf of which the contact is acting or for which the contact is working.
	 */
	organization?: Reference;
	/**
	 * May contain extended information for property: 'organization'
	 */
	_organization?: Element;
	/**
	 * The period during which this contact person or organization is valid to be contacted relating to this patient.
	 */
	period?: Period;
	/**
	 * May contain extended information for property: 'period'
	 */
	_period?: Element;
	/**
	 * The nature of the relationship between the patient and the contact person.
	 */
	relationship?: CodeableConcept[];
	/**
	 * May contain extended information for property: 'relationship'
	 */
	_relationship?: Element[];
	/**
	 * A contact detail for the person, e.g. a telephone number or an email address.
	 */
	telecom?: ContactPoint[];
	/**
	 * May contain extended information for property: 'telecom'
	 */
	_telecom?: Element[];
}
/**
 * Code Values for the PatientLink.type field
 */
export enum PatientLinkTypeCodes {
	replaced_by = "replaced-by",
	replaces = "replaces",
	refer = "refer",
	seealso = "seealso",
}
/**
 * Link to another patient resource that concerns the same actual patient.
 * From: c:/git/fhir\publish\patient.profile.canonical.json
 */
export interface PatientLink extends Element {
	/**
	 * The other patient resource that the link refers to.
	 */
	other: Reference;
	/**
	 * May contain extended information for property: 'other'
	 */
	_other?: Element;
	/**
	 * The type of link between this patient resource and another patient resource.
	 */
	type: code;
	/**
	 * May contain extended information for property: 'type'
	 */
	_type?: Element;
}
/**
 * Base StructureDefinition for Period Type: A time period defined by a start and end date and optionally time.
 * From: c:/git/fhir\publish\period.profile.canonical.json
 */
export interface Period extends Element {
	/**
	 * The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time.
	 */
	end?: dateTime;
	/**
	 * May contain extended information for property: 'end'
	 */
	_end?: Element;
	/**
	 * The start of the period. The boundary is inclusive.
	 */
	start?: dateTime;
	/**
	 * May contain extended information for property: 'start'
	 */
	_start?: Element;
}
/**
 * Code Values for the Quantity.code field
 */
export enum QuantityCodeCodes {
	Coded = "Coded",
}
/**
 * Code Values for the Quantity.comparator field
 */
export enum QuantityComparatorCodes {
	LESS_THAN = "<",
	LESS_THAN_OR_EQUALS = "<=",
	GREATER_THAN_OR_EQUALS = ">=",
	GREATER_THAN = ">",
}
/**
 * There SHALL be a code if there is a value and it SHALL be an expression of currency.  If system is present, it SHALL be ISO 4217 (system = "urn:iso:std:iso:4217" - currency).
 * From: c:/git/fhir\publish\moneyquantity.profile.canonical.json
 */
export interface Quantity extends Element {
	/**
	 * The preferred system is UCUM, but SNOMED CT can also be used (for customary units) or ISO 4217 for currency.  The context of use may additionally require a code from a particular system.
	 */
	code?: code;
	/**
	 * May contain extended information for property: 'code'
	 */
	_code?: Element;
	/**
	 * How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.
	 */
	comparator?: code;
	/**
	 * May contain extended information for property: 'comparator'
	 */
	_comparator?: Element;
	/**
	 * The identification of the system that provides the coded form of the unit.
	 */
	system?: uri;
	/**
	 * May contain extended information for property: 'system'
	 */
	_system?: Element;
	/**
	 * A human-readable form of the unit.
	 */
	unit?: string;
	/**
	 * May contain extended information for property: 'unit'
	 */
	_unit?: Element;
	/**
	 * The value of the measured amount. The value includes an implicit precision in the presentation of the value.
	 */
	value?: decimal;
	/**
	 * May contain extended information for property: 'value'
	 */
	_value?: Element;
}
/**
 * Base StructureDefinition for Range Type: A set of ordered Quantities defined by a low and high limit.
 * From: c:/git/fhir\publish\range.profile.canonical.json
 */
export interface Range extends Element {
	/**
	 * The high limit. The boundary is inclusive.
	 */
	high?: Quantity;
	/**
	 * May contain extended information for property: 'high'
	 */
	_high?: Element;
	/**
	 * The low limit. The boundary is inclusive.
	 */
	low?: Quantity;
	/**
	 * May contain extended information for property: 'low'
	 */
	_low?: Element;
}
/**
 * Base StructureDefinition for Ratio Type: A relationship of two Quantity values - expressed as a numerator and a denominator.
 * From: c:/git/fhir\publish\ratio.profile.canonical.json
 */
export interface Ratio extends Element {
	/**
	 * The value of the denominator.
	 */
	denominator?: Quantity;
	/**
	 * May contain extended information for property: 'denominator'
	 */
	_denominator?: Element;
	/**
	 * The value of the numerator.
	 */
	numerator?: Quantity;
	/**
	 * May contain extended information for property: 'numerator'
	 */
	_numerator?: Element;
}
/**
 * One of the resource types defined as part of this version of FHIR.
 */
interface ResourceType_Interface {
};
/**
 * One of the resource types defined as part of this version of FHIR.
 */
export const ResourceType: ResourceType_Interface = {
}
/*
 * ValueSet alias for http://hl7.org/fhir/ValueSet/resource-types
 */
export const ReferenceTypeValues = ResourceType;
/**
 * Base StructureDefinition for Reference Type: A reference from one resource to another.
 * From: c:/git/fhir\publish\reference.profile.canonical.json
 */
export interface Reference extends Element {
	/**
	 * Plain text narrative that identifies the resource in addition to the resource reference.
	 */
	display?: string;
	/**
	 * May contain extended information for property: 'display'
	 */
	_display?: Element;
	/**
	 * An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.
	 */
	identifier?: Identifier;
	/**
	 * May contain extended information for property: 'identifier'
	 */
	_identifier?: Element;
	/**
	 * A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.
	 */
	reference?: string;
	/**
	 * May contain extended information for property: 'reference'
	 */
	_reference?: Element;
	/**
	 * The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.
	 * 
	 * The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. "Patient" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).
	 */
	type?: uri;
	/**
	 * May contain extended information for property: 'type'
	 */
	_type?: Element;
}
/**
 * Code Values for the RelatedArtifact.type field
 */
export enum RelatedArtifactTypeCodes {
	documentation = "documentation",
	justification = "justification",
	citation = "citation",
	predecessor = "predecessor",
	successor = "successor",
	derived_from = "derived-from",
	depends_on = "depends-on",
	composed_of = "composed-of",
}
/**
 * Base StructureDefinition for RelatedArtifact Type: Related artifacts such as additional documentation, justification, or bibliographic references.
 * From: c:/git/fhir\publish\relatedartifact.profile.canonical.json
 */
export interface RelatedArtifact extends Element {
	/**
	 * A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format.
	 */
	citation?: markdown;
	/**
	 * May contain extended information for property: 'citation'
	 */
	_citation?: Element;
	/**
	 * A brief description of the document or knowledge resource being referenced, suitable for display to a consumer.
	 */
	display?: string;
	/**
	 * May contain extended information for property: 'display'
	 */
	_display?: Element;
	/**
	 * The document being referenced, represented as an attachment. This is exclusive with the resource element.
	 */
	document?: Attachment;
	/**
	 * May contain extended information for property: 'document'
	 */
	_document?: Element;
	/**
	 * A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index.
	 */
	label?: string;
	/**
	 * May contain extended information for property: 'label'
	 */
	_label?: Element;
	/**
	 * The related resource, such as a library, value set, profile, or other knowledge resource.
	 */
	resource?: canonical;
	/**
	 * May contain extended information for property: 'resource'
	 */
	_resource?: Element;
	/**
	 * The type of relationship to the related artifact.
	 */
	type: code;
	/**
	 * May contain extended information for property: 'type'
	 */
	_type?: Element;
	/**
	 * A url for the artifact that can be followed to access the actual content.
	 */
	url?: url;
	/**
	 * May contain extended information for property: 'url'
	 */
	_url?: Element;
}
/**
 * Code Values for the Resource.language field
 */
export enum ResourceLanguageCodes {
	Language = "Language",
}
/**
 * This is the base resource type for everything.
 * From: c:/git/fhir\publish\resource.profile.canonical.json
 */
export interface Resource {
	/**
	 * The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
	 */
	id?: id;
	/**
	 * May contain extended information for property: 'id'
	 */
	_id?: Element;
	/**
	 * A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
	 */
	implicitRules?: uri;
	/**
	 * May contain extended information for property: 'implicitRules'
	 */
	_implicitRules?: Element;
	/**
	 * Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
	 */
	language?: code;
	/**
	 * May contain extended information for property: 'language'
	 */
	_language?: Element;
	/**
	 * The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
	 */
	meta?: Meta;
	/**
	 * May contain extended information for property: 'meta'
	 */
	_meta?: Element;
}
/**
 * Base StructureDefinition for SampledData Type: A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.
 * From: c:/git/fhir\publish\sampleddata.profile.canonical.json
 */
export interface SampledData extends Element {
	/**
	 * A series of data points which are decimal values separated by a single space (character u20). The special values "E" (error), "L" (below detection limit) and "U" (above detection limit) can also be used in place of a decimal value.
	 */
	data?: string;
	/**
	 * May contain extended information for property: 'data'
	 */
	_data?: Element;
	/**
	 * The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once.
	 */
	dimensions: positiveInt;
	/**
	 * May contain extended information for property: 'dimensions'
	 */
	_dimensions?: Element;
	/**
	 * A correction factor that is applied to the sampled data points before they are added to the origin.
	 */
	factor?: decimal;
	/**
	 * May contain extended information for property: 'factor'
	 */
	_factor?: Element;
	/**
	 * The lower limit of detection of the measured points. This is needed if any of the data points have the value "L" (lower than detection limit).
	 */
	lowerLimit?: decimal;
	/**
	 * May contain extended information for property: 'lowerLimit'
	 */
	_lowerLimit?: Element;
	/**
	 * The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series.
	 */
	origin: Quantity;
	/**
	 * May contain extended information for property: 'origin'
	 */
	_origin?: Element;
	/**
	 * The length of time between sampling times, measured in milliseconds.
	 */
	period: decimal;
	/**
	 * May contain extended information for property: 'period'
	 */
	_period?: Element;
	/**
	 * The upper limit of detection of the measured points. This is needed if any of the data points have the value "U" (higher than detection limit).
	 */
	upperLimit?: decimal;
	/**
	 * May contain extended information for property: 'upperLimit'
	 */
	_upperLimit?: Element;
}
const SignatureTypeCodes_ProofOfOrigin: Coding = {
		code: "ProofOfOrigin",
		display: "Proof of origin",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_ProofOfReceipt: Coding = {
		code: "ProofOfReceipt",
		display: "Proof of receipt",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_ProofOfDelivery: Coding = {
		code: "ProofOfDelivery",
		display: "Proof of delivery",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_ProofOfSender: Coding = {
		code: "ProofOfSender",
		display: "Proof of sender",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_ProofOfapproval: Coding = {
		code: "ProofOfapproval",
		display: "Proof of approval",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_ProofOfCreation: Coding = {
		code: "ProofOfCreation",
		display: "Proof of creation",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_1: Coding = {
		code: "1.2.840.10065.1.12.1.1",
		display: "Author's Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_2: Coding = {
		code: "1.2.840.10065.1.12.1.2",
		display: "Coauthor's Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_3: Coding = {
		code: "1.2.840.10065.1.12.1.3",
		display: "Co-participant's Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_4: Coding = {
		code: "1.2.840.10065.1.12.1.4",
		display: "Transcriptionist/Recorder Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_5: Coding = {
		code: "1.2.840.10065.1.12.1.5",
		display: "Verification Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_6: Coding = {
		code: "1.2.840.10065.1.12.1.6",
		display: "Validation Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_7: Coding = {
		code: "1.2.840.10065.1.12.1.7",
		display: "Consent Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_8: Coding = {
		code: "1.2.840.10065.1.12.1.8",
		display: "Signature Witness Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_9: Coding = {
		code: "1.2.840.10065.1.12.1.9",
		display: "Event Witness Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_10: Coding = {
		code: "1.2.840.10065.1.12.1.10",
		display: "Identity Witness Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_11: Coding = {
		code: "1.2.840.10065.1.12.1.11",
		display: "Consent Witness Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_12: Coding = {
		code: "1.2.840.10065.1.12.1.12",
		display: "Interpreter Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_13: Coding = {
		code: "1.2.840.10065.1.12.1.13",
		display: "Review Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_14: Coding = {
		code: "1.2.840.10065.1.12.1.14",
		display: "Source Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_15: Coding = {
		code: "1.2.840.10065.1.12.1.15",
		display: "Addendum Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_16: Coding = {
		code: "1.2.840.10065.1.12.1.16",
		display: "Modification Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_17: Coding = {
		code: "1.2.840.10065.1.12.1.17",
		display: "Administrative (Error/Edit) Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
const SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_18: Coding = {
		code: "1.2.840.10065.1.12.1.18",
		display: "Timestamp Signature",
		system: "urn:iso-astm:E1762-95:2013"
	};
/**
 * The Digital Signature Purposes, an indication of the reason an entity signs a document. This is included in the signed information and can be used when determining accountability for various actions concerning the document. Examples include: author, transcriptionist/recorder, and witness.
 */
interface SignatureTypeCodes_Interface {
	/**
	 * indicates that the signer recognizes to have created, approved and sent the signed data object.
	 */
	ProofOfOrigin: Coding,
	/**
	 * indicates that signer recognizes to have received the content of the signed data object.
	 */
	ProofOfReceipt: Coding,
	/**
	 * indicates that the TSP providing that indication has delivered a signed data object in a local store accessible to the recipient of the signed data object.
	 */
	ProofOfDelivery: Coding,
	/**
	 * indicates that the entity providing that indication has sent the signed data object (but not necessarily created it).
	 */
	ProofOfSender: Coding,
	/**
	 * indicates that the signer has approved the content of the signed data object.
	 */
	ProofOfapproval: Coding,
	/**
	 * indicates that the signer has created the signed data object (but not necessarily approved, nor sent it).
	 */
	ProofOfCreation: Coding,
	/**
	 * the signature of the primary or sole author of a health information document. There can be only one primary author of a health information document.
	 */
	VAL__1_2_840_10065_1_12_1_1: Coding,
	/**
	 * the signature of a health information document coauthor. There can be multiple coauthors of a health information document.
	 */
	VAL__1_2_840_10065_1_12_1_2: Coding,
	/**
	 * the signature of an individual who is a participant in the health information document but is not an author or coauthor. (Example a surgeon who is required by institutional, regulatory, or legal rules to sign an operative report, but who was not involved in the authorship of that report.)
	 */
	VAL__1_2_840_10065_1_12_1_3: Coding,
	/**
	 * the signature of an individual who has transcribed a dictated document or recorded written text into a digital machine readable format.
	 */
	VAL__1_2_840_10065_1_12_1_4: Coding,
	/**
	 * a signature verifying the information contained in a document. (Example a physician is required to countersign a verbal order that has previously been recorded in the medical record by a registered nurse who has carried out the verbal order.)
	 */
	VAL__1_2_840_10065_1_12_1_5: Coding,
	/**
	 * a signature validating a health information document for inclusion in the patient record. (Example a medical student or resident is credentialed to perform history or physical examinations and to write progress notes. The attending physician signs the history and physical examination to validate the entry for inclusion in the patient's medical record.)
	 */
	VAL__1_2_840_10065_1_12_1_6: Coding,
	/**
	 * the signature of an individual consenting to what is described in a health information document.
	 */
	VAL__1_2_840_10065_1_12_1_7: Coding,
	/**
	 * the signature of a witness to any other signature.
	 */
	VAL__1_2_840_10065_1_12_1_8: Coding,
	/**
	 * the signature of a witness to an event. (Example the witness has observed a procedure and is attesting to this fact.)
	 */
	VAL__1_2_840_10065_1_12_1_9: Coding,
	/**
	 * the signature of an individual who has witnessed another individual who is known to them signing a document. (Example the identity witness is a notary public.)
	 */
	VAL__1_2_840_10065_1_12_1_10: Coding,
	/**
	 * the signature of an individual who has witnessed the health care provider counselling a patient.
	 */
	VAL__1_2_840_10065_1_12_1_11: Coding,
	/**
	 * the signature of an individual who has translated health care information during an event or the obtaining of consent to a treatment.
	 */
	VAL__1_2_840_10065_1_12_1_12: Coding,
	/**
	 * the signature of a person, device, or algorithm that has reviewed or filtered data for inclusion into the patient record. ( Examples: (1) a medical records clerk who scans a document for inclusion in the medical record, enters header information, or catalogues and classifies the data, or a combination thereof; (2) a gateway that receives data from another computer system and interprets that data or changes its format, or both, before entering it into the patient record.)
	 */
	VAL__1_2_840_10065_1_12_1_13: Coding,
	/**
	 * the signature of an automated data source. (Examples: (1) the signature for an image that is generated by a device for inclusion in the patient record; (2) the signature for an ECG derived by an ECG system for inclusion in the patient record; (3) the data from a biomedical monitoring device or system that is for inclusion in the patient record.)
	 */
	VAL__1_2_840_10065_1_12_1_14: Coding,
	/**
	 * the signature on a new amended document of an individual who has corrected, edited, or amended an original health information document. An addendum signature can either be a signature type or a signature sub-type (see 8.1). Any document with an addendum signature shall have a companion document that is the original document with its original, unaltered content, and original signatures. The original document shall be referenced via an attribute in the new document, which contains, for example, the digest of the old document. Whether the original, unaltered, document is always displayed with the addended document is a local matter, but the original, unaltered, document must remain as part of the patient record and be retrievable on demand.
	 */
	VAL__1_2_840_10065_1_12_1_15: Coding,
	/**
	 * the signature on an original document of an individual who has generated a new amended document. This (original) document shall reference the new document via an additional signature purpose. This is the inverse of an addendum signature and provides a pointer from the original to the amended document.
	 */
	VAL__1_2_840_10065_1_12_1_16: Coding,
	/**
	 * the signature of an individual who is certifying that the document is invalidated by an error(s), or is placed in the wrong chart. An administrative (error/edit) signature must include an addendum to the document and therefore shall have an addendum signature sub-type (see 8.1). This signature is reserved for the highest health information system administrative classification, since it is a statement that the entire document is invalidated by the error and that the document should no longer be used for patient care, although for legal reasons the document must remain part of the permanent patient record.
	 */
	VAL__1_2_840_10065_1_12_1_17: Coding,
	/**
	 * the signature by an entity or device trusted to provide accurate timestamps. This timestamp might be provided, for example, in the signature time attribute.
	 */
	VAL__1_2_840_10065_1_12_1_18: Coding,
};
/**
 * The Digital Signature Purposes, an indication of the reason an entity signs a document. This is included in the signed information and can be used when determining accountability for various actions concerning the document. Examples include: author, transcriptionist/recorder, and witness.
 */
export const SignatureTypeCodes: SignatureTypeCodes_Interface = {
	ProofOfOrigin: SignatureTypeCodes_ProofOfOrigin,
	ProofOfReceipt: SignatureTypeCodes_ProofOfReceipt,
	ProofOfDelivery: SignatureTypeCodes_ProofOfDelivery,
	ProofOfSender: SignatureTypeCodes_ProofOfSender,
	ProofOfapproval: SignatureTypeCodes_ProofOfapproval,
	ProofOfCreation: SignatureTypeCodes_ProofOfCreation,
	VAL__1_2_840_10065_1_12_1_1: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_1,
	VAL__1_2_840_10065_1_12_1_2: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_2,
	VAL__1_2_840_10065_1_12_1_3: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_3,
	VAL__1_2_840_10065_1_12_1_4: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_4,
	VAL__1_2_840_10065_1_12_1_5: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_5,
	VAL__1_2_840_10065_1_12_1_6: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_6,
	VAL__1_2_840_10065_1_12_1_7: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_7,
	VAL__1_2_840_10065_1_12_1_8: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_8,
	VAL__1_2_840_10065_1_12_1_9: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_9,
	VAL__1_2_840_10065_1_12_1_10: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_10,
	VAL__1_2_840_10065_1_12_1_11: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_11,
	VAL__1_2_840_10065_1_12_1_12: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_12,
	VAL__1_2_840_10065_1_12_1_13: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_13,
	VAL__1_2_840_10065_1_12_1_14: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_14,
	VAL__1_2_840_10065_1_12_1_15: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_15,
	VAL__1_2_840_10065_1_12_1_16: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_16,
	VAL__1_2_840_10065_1_12_1_17: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_17,
	VAL__1_2_840_10065_1_12_1_18: SignatureTypeCodes_VAL__1_2_840_10065_1_12_1_18,
}
/*
 * ValueSet alias for http://hl7.org/fhir/ValueSet/signature-type
 */
export const SignatureTypeValues = SignatureTypeCodes;
/**
 * Code Values for the Signature.sigFormat field
 */
export enum SignatureSigFormatCodes {
	The = "The",
}
/**
 * Code Values for the Signature.targetFormat field
 */
export enum SignatureTargetFormatCodes {
	The = "The",
}
/**
 * Base StructureDefinition for Signature Type: A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.
 * From: c:/git/fhir\publish\signature.profile.canonical.json
 */
export interface Signature extends Element {
	/**
	 * The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty.
	 */
	data?: base64Binary;
	/**
	 * May contain extended information for property: 'data'
	 */
	_data?: Element;
	/**
	 * A reference to an application-usable description of the identity that is represented by the signature.
	 */
	onBehalfOf?: Reference;
	/**
	 * May contain extended information for property: 'onBehalfOf'
	 */
	_onBehalfOf?: Element;
	/**
	 * A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc.
	 */
	sigFormat?: code;
	/**
	 * May contain extended information for property: 'sigFormat'
	 */
	_sigFormat?: Element;
	/**
	 * "xml", "json" and "ttl" are allowed, which describe the simple encodings described in the specification (and imply appropriate bundle support). Otherwise, mime types are legal here.
	 */
	targetFormat?: code;
	/**
	 * May contain extended information for property: 'targetFormat'
	 */
	_targetFormat?: Element;
	/**
	 * An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.
	 */
	type: Coding[];
	/**
	 * May contain extended information for property: 'type'
	 */
	_type?: Element[];
	/**
	 * When the digital signature was signed.
	 */
	when: instant;
	/**
	 * May contain extended information for property: 'when'
	 */
	_when?: Element;
	/**
	 * A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key).
	 */
	who: Reference;
	/**
	 * May contain extended information for property: 'who'
	 */
	_who?: Element;
}
const TimingAbbreviation_BED: Coding = {
		code: "BED",
		display: "at bedtime",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_BID: Coding = {
		code: "BID",
		display: "BID",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JB: Coding = {
		code: "JB",
		display: "JB",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JE: Coding = {
		code: "JE",
		display: "JE",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JH: Coding = {
		code: "JH",
		display: "GTSAbbreviationHolidays",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHCHREAS: Coding = {
		code: "JHCHREAS",
		display: "JHCHREAS",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHCHRGFR: Coding = {
		code: "JHCHRGFR",
		display: "JHCHRGFR",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHCHRNEW: Coding = {
		code: "JHCHRNEW",
		display: "JHCHRNEW",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHCHRPEN: Coding = {
		code: "JHCHRPEN",
		display: "JHCHRPEN",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHCHRXME: Coding = {
		code: "JHCHRXME",
		display: "JHCHRXME",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHCHRXMS: Coding = {
		code: "JHCHRXMS",
		display: "JHCHRXMS",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNNL: Coding = {
		code: "JHNNL",
		display: "The Netherlands National Holidays",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNNLLD: Coding = {
		code: "JHNNLLD",
		display: "Liberation day (May 5 every five years)",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNNLQD: Coding = {
		code: "JHNNLQD",
		display: "Queen's day (April 30)",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNNLSK: Coding = {
		code: "JHNNLSK",
		display: "Sinterklaas (December 5)",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNUS: Coding = {
		code: "JHNUS",
		display: "GTSAbbreviationHolidaysUSNational",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNUSCLM: Coding = {
		code: "JHNUSCLM",
		display: "JHNUSCLM",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNUSIND: Coding = {
		code: "JHNUSIND",
		display: "JHNUSIND",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNUSIND1: Coding = {
		code: "JHNUSIND1",
		display: "JHNUSIND1",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNUSIND5: Coding = {
		code: "JHNUSIND5",
		display: "JHNUSIND5",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNUSLBR: Coding = {
		code: "JHNUSLBR",
		display: "JHNUSLBR",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNUSMEM: Coding = {
		code: "JHNUSMEM",
		display: "JHNUSMEM",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNUSMEM5: Coding = {
		code: "JHNUSMEM5",
		display: "JHNUSMEM5",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNUSMEM6: Coding = {
		code: "JHNUSMEM6",
		display: "JHNUSMEM6",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNUSMLK: Coding = {
		code: "JHNUSMLK",
		display: "JHNUSMLK",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNUSPRE: Coding = {
		code: "JHNUSPRE",
		display: "JHNUSPRE",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNUSTKS: Coding = {
		code: "JHNUSTKS",
		display: "JHNUSTKS",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNUSTKS5: Coding = {
		code: "JHNUSTKS5",
		display: "JHNUSTKS5",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_JHNUSVET: Coding = {
		code: "JHNUSVET",
		display: "JHNUSVET",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_MO: Coding = {
		code: "MO",
		display: "monthly",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_PM: Coding = {
		code: "PM",
		display: "PM",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_Q1H: Coding = {
		code: "Q1H",
		display: "every hour",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_Q2H: Coding = {
		code: "Q2H",
		display: "every 2 hours",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_Q3H: Coding = {
		code: "Q3H",
		display: "every 3 hours",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_Q4H: Coding = {
		code: "Q4H",
		display: "Q4H",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_Q6H: Coding = {
		code: "Q6H",
		display: "Q6H",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_Q8H: Coding = {
		code: "Q8H",
		display: "every 8 hours",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_QD: Coding = {
		code: "QD",
		display: "QD",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_QID: Coding = {
		code: "QID",
		display: "QID",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_QOD: Coding = {
		code: "QOD",
		display: "QOD",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_TID: Coding = {
		code: "TID",
		display: "TID",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
const TimingAbbreviation_WK: Coding = {
		code: "WK",
		display: "weekly",
		system: "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
	};
/**
 * Code for a known / defined timing pattern.
 */
interface TimingAbbreviation_Interface {
	/**
	 * At bedtime (institution specified time).
	 */
	BED: Coding,
	/**
	 * Two times a day at institution specified time
	 */
	BID: Coding,
	/**
	 * Regular business days (Monday to Friday excluding holidays)
	 */
	JB: Coding,
	/**
	 * Regular weekends (Saturday and Sunday excluding holidays)
	 */
	JE: Coding,
	/**
	 * Holidays
	 */
	JH: Coding,
	/**
	 * Easter Sunday.  The Easter date is a rather complex calculation based on Astronomical tables describing full moon dates.  Details can be found at [http://www.assa.org.au/edm.html, and http://aa.usno.navy.mil/AA/faq/docs/easter.html].  Note that the Christian Orthodox Holidays are based on the Julian calendar.
	 */
	JHCHREAS: Coding,
	/**
	 * Good Friday, is the Friday right before Easter Sunday.
	 */
	JHCHRGFR: Coding,
	/**
	 * New Year's Day (January 1)
	 */
	JHCHRNEW: Coding,
	/**
	 * Pentecost Sunday, is seven weeks after Easter (the 50th day of Easter).
	 */
	JHCHRPEN: Coding,
	/**
	 * Christmas Eve (December 24)
	 */
	JHCHRXME: Coding,
	/**
	 * Christmas Day (December 25)
	 */
	JHCHRXMS: Coding,
	/**
	 * Description:The Netherlands National Holidays.
	 */
	JHNNL: Coding,
	/**
	 * Description:Liberation day  (May 5 every five years)
	 */
	JHNNLLD: Coding,
	/**
	 * Description:Queen's day (April 30)
	 */
	JHNNLQD: Coding,
	/**
	 * Description:Sinterklaas (December 5)
	 */
	JHNNLSK: Coding,
	/**
	 * United States National Holidays (public holidays for federal employees established by U.S. Federal law 5 U.S.C. 6103).
	 */
	JHNUS: Coding,
	/**
	 * Columbus Day, the second Monday in October.
	 */
	JHNUSCLM: Coding,
	/**
	 * Independence Day (4th of July)
	 */
	JHNUSIND: Coding,
	/**
	 * Alternative Monday after 4th of July Weekend [5 U.S.C. 6103(b)].
	 */
	JHNUSIND1: Coding,
	/**
	 * Alternative Friday before 4th of July Weekend [5 U.S.C. 6103(b)].
	 */
	JHNUSIND5: Coding,
	/**
	 * Labor Day, the first Monday in September.
	 */
	JHNUSLBR: Coding,
	/**
	 * Memorial Day, the last Monday in May.
	 */
	JHNUSMEM: Coding,
	/**
	 * Friday before Memorial Day Weekend
	 */
	JHNUSMEM5: Coding,
	/**
	 * Saturday of Memorial Day Weekend
	 */
	JHNUSMEM6: Coding,
	/**
	 * Dr. Martin Luther King, Jr. Day, the third Monday in January.
	 */
	JHNUSMLK: Coding,
	/**
	 * Washington's Birthday (Presidential Day) the third Monday in February.
	 */
	JHNUSPRE: Coding,
	/**
	 * Thanksgiving Day, the fourth Thursday in November.
	 */
	JHNUSTKS: Coding,
	/**
	 * Friday after Thanksgiving.
	 */
	JHNUSTKS5: Coding,
	/**
	 * Veteran's Day, November 11.
	 */
	JHNUSVET: Coding,
	/**
	 * Monthly at institution specified time.
	 */
	MO: Coding,
	/**
	 * Every afternoon at institution specified times.
	 */
	PM: Coding,
	/**
	 * Every hour at institution specified times.
	 */
	Q1H: Coding,
	/**
	 * Every 2 hours at institution specified times.
	 */
	Q2H: Coding,
	/**
	 * Every 3 hours at institution specified times.
	 */
	Q3H: Coding,
	/**
	 * Every 4 hours at institution specified time
	 */
	Q4H: Coding,
	/**
	 * Every 6 hours at institution specified time
	 */
	Q6H: Coding,
	/**
	 * Every 8 hours at institution specified times.
	 */
	Q8H: Coding,
	/**
	 * Every day at institution specified times.
	 */
	QD: Coding,
	/**
	 * Four times a day at institution specified time
	 */
	QID: Coding,
	/**
	 * Every other day at institution specified times.
	 */
	QOD: Coding,
	/**
	 * Three times a day at institution specified time
	 */
	TID: Coding,
	/**
	 * Weekly at institution specified time.
	 */
	WK: Coding,
};
/**
 * Code for a known / defined timing pattern.
 */
export const TimingAbbreviation: TimingAbbreviation_Interface = {
	BED: TimingAbbreviation_BED,
	BID: TimingAbbreviation_BID,
	JB: TimingAbbreviation_JB,
	JE: TimingAbbreviation_JE,
	JH: TimingAbbreviation_JH,
	JHCHREAS: TimingAbbreviation_JHCHREAS,
	JHCHRGFR: TimingAbbreviation_JHCHRGFR,
	JHCHRNEW: TimingAbbreviation_JHCHRNEW,
	JHCHRPEN: TimingAbbreviation_JHCHRPEN,
	JHCHRXME: TimingAbbreviation_JHCHRXME,
	JHCHRXMS: TimingAbbreviation_JHCHRXMS,
	JHNNL: TimingAbbreviation_JHNNL,
	JHNNLLD: TimingAbbreviation_JHNNLLD,
	JHNNLQD: TimingAbbreviation_JHNNLQD,
	JHNNLSK: TimingAbbreviation_JHNNLSK,
	JHNUS: TimingAbbreviation_JHNUS,
	JHNUSCLM: TimingAbbreviation_JHNUSCLM,
	JHNUSIND: TimingAbbreviation_JHNUSIND,
	JHNUSIND1: TimingAbbreviation_JHNUSIND1,
	JHNUSIND5: TimingAbbreviation_JHNUSIND5,
	JHNUSLBR: TimingAbbreviation_JHNUSLBR,
	JHNUSMEM: TimingAbbreviation_JHNUSMEM,
	JHNUSMEM5: TimingAbbreviation_JHNUSMEM5,
	JHNUSMEM6: TimingAbbreviation_JHNUSMEM6,
	JHNUSMLK: TimingAbbreviation_JHNUSMLK,
	JHNUSPRE: TimingAbbreviation_JHNUSPRE,
	JHNUSTKS: TimingAbbreviation_JHNUSTKS,
	JHNUSTKS5: TimingAbbreviation_JHNUSTKS5,
	JHNUSVET: TimingAbbreviation_JHNUSVET,
	MO: TimingAbbreviation_MO,
	PM: TimingAbbreviation_PM,
	Q1H: TimingAbbreviation_Q1H,
	Q2H: TimingAbbreviation_Q2H,
	Q3H: TimingAbbreviation_Q3H,
	Q4H: TimingAbbreviation_Q4H,
	Q6H: TimingAbbreviation_Q6H,
	Q8H: TimingAbbreviation_Q8H,
	QD: TimingAbbreviation_QD,
	QID: TimingAbbreviation_QID,
	QOD: TimingAbbreviation_QOD,
	TID: TimingAbbreviation_TID,
	WK: TimingAbbreviation_WK,
}
/*
 * ValueSet alias for http://hl7.org/fhir/ValueSet/timing-abbreviation
 */
export const TimingCodeValues = TimingAbbreviation;
/**
 * Base StructureDefinition for Timing Type: Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.
 * From: c:/git/fhir\publish\timing.profile.canonical.json
 */
export interface Timing extends BackboneElement {
	/**
	 * A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).
	 */
	code?: CodeableConcept;
	/**
	 * May contain extended information for property: 'code'
	 */
	_code?: Element;
	/**
	 * Identifies specific times when the event occurs.
	 */
	event?: dateTime[];
	/**
	 * May contain extended information for property: 'event'
	 */
	_event?: Element[];
	/**
	 * A set of rules that describe when the event is scheduled.
	 */
	repeat?: TimingRepeat;
	/**
	 * May contain extended information for property: 'repeat'
	 */
	_repeat?: Element;
}
/**
 * Code Values for the TimingRepeat.dayOfWeek field
 */
export enum TimingRepeatDayOfWeekCodes {
	mon = "mon",
	tue = "tue",
	wed = "wed",
	thu = "thu",
	fri = "fri",
	sat = "sat",
	sun = "sun",
}
/**
 * Code Values for the TimingRepeat.durationUnit field
 */
export enum TimingRepeatDurationUnitCodes {
	s = "s",
	min = "min",
	h = "h",
	d = "d",
	wk = "wk",
	mo = "mo",
	a = "a",
}
/**
 * Code Values for the TimingRepeat.periodUnit field
 */
export enum TimingRepeatPeriodUnitCodes {
	s = "s",
	min = "min",
	h = "h",
	d = "d",
	wk = "wk",
	mo = "mo",
	a = "a",
}
/**
 * Code Values for the TimingRepeat.when field
 */
export enum TimingRepeatWhenCodes {
	Code = "Code",
}
/**
 * A set of rules that describe when the event is scheduled.
 * From: c:/git/fhir\publish\timing.profile.canonical.json
 */
export interface TimingRepeat extends Element {
	/**
	 * Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.
	 */
	boundsDuration?: Duration;
	/**
	 * May contain extended information for property: 'boundsDuration'
	 */
	_boundsDuration?: Element;
	/**
	 * Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.
	 */
	boundsPeriod?: Period;
	/**
	 * May contain extended information for property: 'boundsPeriod'
	 */
	_boundsPeriod?: Element;
	/**
	 * Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.
	 */
	boundsRange?: Range;
	/**
	 * May contain extended information for property: 'boundsRange'
	 */
	_boundsRange?: Element;
	/**
	 * A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values.
	 */
	count?: positiveInt;
	/**
	 * May contain extended information for property: 'count'
	 */
	_count?: Element;
	/**
	 * If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.
	 */
	countMax?: positiveInt;
	/**
	 * May contain extended information for property: 'countMax'
	 */
	_countMax?: Element;
	/**
	 * If no days are specified, the action is assumed to happen every day as otherwise specified. The elements frequency and period cannot be used as well as dayOfWeek.
	 */
	dayOfWeek?: code[];
	/**
	 * May contain extended information for property: 'dayOfWeek'
	 */
	_dayOfWeek?: Element[];
	/**
	 * How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration.
	 */
	duration?: decimal;
	/**
	 * May contain extended information for property: 'duration'
	 */
	_duration?: Element;
	/**
	 * If present, indicates that the duration is a range - so to perform the action between [duration] and [durationMax] time length.
	 */
	durationMax?: decimal;
	/**
	 * May contain extended information for property: 'durationMax'
	 */
	_durationMax?: Element;
	/**
	 * The units of time for the duration, in UCUM units.
	 */
	durationUnit?: code;
	/**
	 * May contain extended information for property: 'durationUnit'
	 */
	_durationUnit?: Element;
	/**
	 * The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency.
	 */
	frequency?: positiveInt;
	/**
	 * May contain extended information for property: 'frequency'
	 */
	_frequency?: Element;
	/**
	 * If present, indicates that the frequency is a range - so to repeat between [frequency] and [frequencyMax] times within the period or period range.
	 */
	frequencyMax?: positiveInt;
	/**
	 * May contain extended information for property: 'frequencyMax'
	 */
	_frequencyMax?: Element;
	/**
	 * The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event.
	 */
	offset?: unsignedInt;
	/**
	 * May contain extended information for property: 'offset'
	 */
	_offset?: Element;
	/**
	 * Indicates the duration of time over which repetitions are to occur; e.g. to express "3 times per day", 3 would be the frequency and "1 day" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length.
	 */
	period?: decimal;
	/**
	 * May contain extended information for property: 'period'
	 */
	_period?: Element;
	/**
	 * If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as "do this once every 3-5 days.
	 */
	periodMax?: decimal;
	/**
	 * May contain extended information for property: 'periodMax'
	 */
	_periodMax?: Element;
	/**
	 * The units of time for the period in UCUM units.
	 */
	periodUnit?: code;
	/**
	 * May contain extended information for property: 'periodUnit'
	 */
	_periodUnit?: Element;
	/**
	 * Specified time of day for action to take place.
	 */
	timeOfDay?: time[];
	/**
	 * May contain extended information for property: 'timeOfDay'
	 */
	_timeOfDay?: Element[];
	/**
	 * When more than one event is listed, the event is tied to the union of the specified events.
	 */
	when?: code[];
	/**
	 * May contain extended information for property: 'when'
	 */
	_when?: Element[];
}
/**
 * Code Values for the TriggerDefinition.type field
 */
export enum TriggerDefinitionTypeCodes {
	named_event = "named-event",
	periodic = "periodic",
	data_changed = "data-changed",
	data_added = "data-added",
	data_modified = "data-modified",
	data_removed = "data-removed",
	data_accessed = "data-accessed",
	data_access_ended = "data-access-ended",
}
/**
 * Base StructureDefinition for TriggerDefinition Type: A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.
 * From: c:/git/fhir\publish\triggerdefinition.profile.canonical.json
 */
export interface TriggerDefinition extends Element {
	/**
	 * A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires.
	 */
	condition?: Expression;
	/**
	 * May contain extended information for property: 'condition'
	 */
	_condition?: Element;
	/**
	 * The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true.
	 */
	data?: DataRequirement[];
	/**
	 * May contain extended information for property: 'data'
	 */
	_data?: Element[];
	/**
	 * A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context.
	 */
	name?: string;
	/**
	 * May contain extended information for property: 'name'
	 */
	_name?: Element;
	/**
	 * The timing of the event (if this is a periodic trigger).
	 */
	timingDate?: date;
	/**
	 * May contain extended information for property: 'timingDate'
	 */
	_timingDate?: Element;
	/**
	 * The timing of the event (if this is a periodic trigger).
	 */
	timingDateTime?: dateTime;
	/**
	 * May contain extended information for property: 'timingDateTime'
	 */
	_timingDateTime?: Element;
	/**
	 * The timing of the event (if this is a periodic trigger).
	 */
	timingReference?: Reference;
	/**
	 * May contain extended information for property: 'timingReference'
	 */
	_timingReference?: Element;
	/**
	 * The timing of the event (if this is a periodic trigger).
	 */
	timingTiming?: Timing;
	/**
	 * May contain extended information for property: 'timingTiming'
	 */
	_timingTiming?: Element;
	/**
	 * The type of triggering event.
	 */
	type: code;
	/**
	 * May contain extended information for property: 'type'
	 */
	_type?: Element;
}
const UsageContextType_gender: Coding = {
		code: "gender",
		display: "Gender",
		system: "http://terminology.hl7.org/CodeSystem/usage-context-type"
	};
const UsageContextType_age: Coding = {
		code: "age",
		display: "Age Range",
		system: "http://terminology.hl7.org/CodeSystem/usage-context-type"
	};
const UsageContextType_focus: Coding = {
		code: "focus",
		display: "Clinical Focus",
		system: "http://terminology.hl7.org/CodeSystem/usage-context-type"
	};
const UsageContextType_user: Coding = {
		code: "user",
		display: "User Type",
		system: "http://terminology.hl7.org/CodeSystem/usage-context-type"
	};
const UsageContextType_workflow: Coding = {
		code: "workflow",
		display: "Workflow Setting",
		system: "http://terminology.hl7.org/CodeSystem/usage-context-type"
	};
const UsageContextType_task: Coding = {
		code: "task",
		display: "Workflow Task",
		system: "http://terminology.hl7.org/CodeSystem/usage-context-type"
	};
const UsageContextType_venue: Coding = {
		code: "venue",
		display: "Clinical Venue",
		system: "http://terminology.hl7.org/CodeSystem/usage-context-type"
	};
const UsageContextType_species: Coding = {
		code: "species",
		display: "Species",
		system: "http://terminology.hl7.org/CodeSystem/usage-context-type"
	};
const UsageContextType_program: Coding = {
		code: "program",
		display: "Program",
		system: "http://terminology.hl7.org/CodeSystem/usage-context-type"
	};
/**
 * A code that specifies a type of context being specified by a usage context.
 */
interface UsageContextType_Interface {
	/**
	 * The gender of the patient. For this context type, appropriate values can be found in the http://hl7.org/fhir/ValueSet/administrative-gender value set.
	 */
	gender: Coding,
	/**
	 * The age of the patient. For this context type, the value could be a range that specifies the applicable ages or a code from an appropriate value set such as the MeSH value set http://terminology.hl7.org/ValueSet/v3-AgeGroupObservationValue.
	 */
	age: Coding,
	/**
	 * The clinical concept(s) addressed by the artifact. For example, disease, diagnostic test interpretation, medication ordering as in http://hl7.org/fhir/ValueSet/condition-code.
	 */
	focus: Coding,
	/**
	 * The clinical specialty of the context in which the patient is being treated - For example, PCP, Patient, Cardiologist, Behavioral Professional, Oral Health Professional, Prescriber, etc... taken from a specialty value set such as the NUCC Health Care provider taxonomy value set http://hl7.org/fhir/ValueSet/provider-taxonomy.
	 */
	user: Coding,
	/**
	 * The settings in which the artifact is intended for use. For example, admission, pre-op, etc. For example, the ActEncounterCode value set http://terminology.hl7.org/ValueSet/v3-ActEncounterCode.
	 */
	workflow: Coding,
	/**
	 * The context for the clinical task(s) represented by this artifact. For example, this could be any task context represented by the HL7 ActTaskCode value set http://terminology.hl7.org/ValueSet/v3-ActTaskCode. General categories include: order entry, patient documentation and patient information review.
	 */
	task: Coding,
	/**
	 * The venue in which an artifact could be used. For example, Outpatient, Inpatient, Home, Nursing home. The code value may originate from the HL7 ServiceDeliveryLocationRoleType value set (http://terminology.hl7.org/ValueSet/v3-ServiceDeliveryLocationRoleType).
	 */
	venue: Coding,
	/**
	 * The species to which an artifact applies. For example, SNOMED - 387961004 | Kingdom Animalia (organism).
	 */
	species: Coding,
	/**
	 * A program/project of work for which this artifact is applicable.
	 */
	program: Coding,
};
/**
 * A code that specifies a type of context being specified by a usage context.
 */
export const UsageContextType: UsageContextType_Interface = {
	gender: UsageContextType_gender,
	age: UsageContextType_age,
	focus: UsageContextType_focus,
	user: UsageContextType_user,
	workflow: UsageContextType_workflow,
	task: UsageContextType_task,
	venue: UsageContextType_venue,
	species: UsageContextType_species,
	program: UsageContextType_program,
}
/*
 * ValueSet alias for http://hl7.org/fhir/ValueSet/usage-context-type
 */
export const UsageContextCodeValues = UsageContextType;
/**
 * Base StructureDefinition for UsageContext Type: Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).
 * From: c:/git/fhir\publish\usagecontext.profile.canonical.json
 */
export interface UsageContext extends Element {
	/**
	 * A code that identifies the type of context being specified by this usage context.
	 */
	code: Coding;
	/**
	 * May contain extended information for property: 'code'
	 */
	_code?: Element;
	/**
	 * A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.
	 */
	valueCodeableConcept: CodeableConcept;
	/**
	 * May contain extended information for property: 'valueCodeableConcept'
	 */
	_valueCodeableConcept?: Element;
	/**
	 * A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.
	 */
	valueQuantity: Quantity;
	/**
	 * May contain extended information for property: 'valueQuantity'
	 */
	_valueQuantity?: Element;
	/**
	 * A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.
	 */
	valueRange: Range;
	/**
	 * May contain extended information for property: 'valueRange'
	 */
	_valueRange?: Element;
	/**
	 * A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.
	 */
	valueReference: Reference;
	/**
	 * May contain extended information for property: 'valueReference'
	 */
	_valueReference?: Element;
}
